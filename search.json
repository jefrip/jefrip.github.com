{"entries":[{"title":"About","baseurl":"","url":"/about.html","date":null,"categories":[],"body":"Jefri Pakpahan is Analyst Programmer on University of Indonesia since 2011. Language : PHP, Java, C. Database : Oracle, PostgreSQL, MySQL. My (mini) Rigs : (Old) Macbook 13\" late 2010 with OWC GB RAM & Crucial SSD 512GB . Hobby : Playing DotA 2 Disclaimer All of this jefri-p.com blog's original content created by Jefri Pakpahan and licensed under Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License. "},{"title":"Articles by tag: Android","baseurl":"","url":"/tag/android/","date":null,"categories":[],"body":""},{"title":"Articles by tag: Apache 2.2","baseurl":"","url":"/tag/apache-22/","date":null,"categories":[],"body":""},{"title":"Articles by tag: Apache Maven 3.0.5","baseurl":"","url":"/tag/apache-maven-3-0-5/","date":null,"categories":[],"body":""},{"title":"Articles by tag: Apache","baseurl":"","url":"/tag/apache/","date":null,"categories":[],"body":""},{"title":"Articles by tag: Appstore","baseurl":"","url":"/tag/appstore/","date":null,"categories":[],"body":""},{"title":"Archive","baseurl":"","url":"/archive.html","date":null,"categories":[],"body":"2015 February February 3, 2015 » Yii 2.0 + Jasig phpCAS 2014 September September 29, 2014 » My Yii Environment May May 12, 2014 » Instalasi Composer lewat Phar (PHP archive) April April 10, 2014 » Error MySQL : mysql_connect(): Headers and client library minor version mismatch 2013 December December 9, 2013 » Mengakali instal aplikasi yang membutuhkan iOS 7.0 agar kompatibel dengan iOS 6 kebawah December 9, 2013 » Kohana Framework 3.x : Error zlib output compression October October 22, 2013 » Weka Tutorial - Perkenalan, Membaca dan Membuat ARFF August August 29, 2013 » Aplikasi RESTful (GIS Service) menggunakan Slim Framework July July 17, 2013 » Membuat Grafik menggunakan HTML (SVG) May May 23, 2013 » Install Apache Maven pada Windows May 7, 2013 » Selamat tinggal Powerpoint... April April 5, 2013 » Iseng-iseng : Script PHP untuk menghitung umur February February 19, 2013 » Pentingnya Database Connection Pooling February 7, 2013 » Cara mudah install Ruby pada Mac OS X dengan RVM January January 11, 2013 » Hacking Kohana External Request 2012 November November 19, 2012 » Install dan Setting Apache 2.2 + PHP 5.3 pada windows November 13, 2012 » Android : Install default Aplikasi Android kita ke SD Card October October 12, 2012 » Android : Beberapa cara OnClickListener October 9, 2012 » Android : Menampilkan/menyembunyikan keyboard October 8, 2012 » Jatuh hati pada layanan Cloud Foundry! September September 14, 2012 » Studi Kecil Klasifikasi Bayesian Network, Decision Tree dan SVM untuk Machine Learning pada Weka September 11, 2012 » Hello World! July July 9, 2012 » Kohana 3.2 : Membuat Template June June 20, 2012 » Mencicipi Cloud Hosting gratis di OpenShift by Red Hat April April 18, 2012 » PHP Framework : Mengenal Framework Kohana 3 January January 12, 2012 » Membuat Search Engine dengan Zend Search Lucene 2011 November November 21, 2011 » Belajar MyBatis 3 "},{"title":"Articles by tag: ARFF","baseurl":"","url":"/tag/arff/","date":null,"categories":[],"body":""},{"title":"Articles by tag: Bayesian Network","baseurl":"","url":"/tag/bayesian-network/","date":null,"categories":[],"body":""},{"title":"Articles by tag: bonecp","baseurl":"","url":"/tag/bonecp/","date":null,"categories":[],"body":""},{"title":"Articles by tag: c3p0","baseurl":"","url":"/tag/c3p0/","date":null,"categories":[],"body":""},{"title":"Articles by tag: Charts","baseurl":"","url":"/tag/charts/","date":null,"categories":[],"body":""},{"title":"Articles by tag: Classifier","baseurl":"","url":"/tag/classifier/","date":null,"categories":[],"body":""},{"title":"Articles by tag: Cloud Foundry","baseurl":"","url":"/tag/cloud-foundry/","date":null,"categories":[],"body":""},{"title":"Articles by tag: cloud","baseurl":"","url":"/tag/cloud/","date":null,"categories":[],"body":""},{"title":"Articles by category: cloud","baseurl":"","url":"/topik/cloud/","date":null,"categories":[],"body":""},{"title":"Articles by tag: Composer","baseurl":"","url":"/tag/composer/","date":null,"categories":[],"body":""},{"title":"Articles by tag: CSS 3","baseurl":"","url":"/tag/css3/","date":null,"categories":[],"body":""},{"title":"Articles by tag: D3.js","baseurl":"","url":"/tag/d3js/","date":null,"categories":[],"body":""},{"title":"Articles by tag: Data Mining","baseurl":"","url":"/tag/data-mining/","date":null,"categories":[],"body":""},{"title":"Articles by tag: database-connection-pooling","baseurl":"","url":"/tag/database-connection-pooling/","date":null,"categories":[],"body":""},{"title":"Articles by category: database","baseurl":"","url":"/topik/database/","date":null,"categories":[],"body":""},{"title":"Articles by tag: Debian","baseurl":"","url":"/tag/debian/","date":null,"categories":[],"body":""},{"title":"Articles by tag: Decision Tree","baseurl":"","url":"/tag/decision-tree/","date":null,"categories":[],"body":""},{"title":"Articles by tag: GCC","baseurl":"","url":"/tag/gcc/","date":null,"categories":[],"body":""},{"title":"Articles by category: general","baseurl":"","url":"/topik/general/","date":null,"categories":[],"body":""},{"title":"Articles by tag: HTML 5","baseurl":"","url":"/tag/html5/","date":null,"categories":[],"body":""},{"title":"Home","baseurl":"","url":"/index.html","date":null,"categories":[],"body":" Previous Page: of Next "},{"title":null,"baseurl":"","url":"/about/index.html","date":null,"categories":[],"body":"About Jefri Pakpahan is Analyst Programmer on University of Indonesia since 2011. Language : PHP, Java, C. Database : Oracle, PostgreSQL, MySQL. My (mini) Rigs : (Old) Macbook 13\" late 2010 with OWC GB RAM & Crucial SSD 512GB . Hobby : Playing DotA 2 Disclaimer All of this jefri-p.com blog's original content created by Jefri Pakpahan and licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License. "},{"title":"Articles by tag: iOS 6.1.3","baseurl":"","url":"/tag/ios-613/","date":null,"categories":[],"body":""},{"title":"Articles by tag: IOS 7.0","baseurl":"","url":"/tag/ios-70/","date":null,"categories":[],"body":""},{"title":"Articles by tag: iPhone","baseurl":"","url":"/tag/iphone/","date":null,"categories":[],"body":""},{"title":"Articles by tag: iPhone 3GS","baseurl":"","url":"/tag/iphone3gs/","date":null,"categories":[],"body":""},{"title":"Articles by tag: itunes","baseurl":"","url":"/tag/itunes/","date":null,"categories":[],"body":""},{"title":"Articles by tag: Jasig CAS","baseurl":"","url":"/tag/jasig-cas/","date":null,"categories":[],"body":""},{"title":"Articles by category: Java","baseurl":"","url":"/topik/java/","date":null,"categories":[],"body":""},{"title":"Articles by tag: java","baseurl":"","url":"/tag/java/","date":null,"categories":[],"body":""},{"title":"Articles by tag: jekyll","baseurl":"","url":"/tag/jekyll/","date":null,"categories":[],"body":""},{"title":"Articles by tag: JSON","baseurl":"","url":"/tag/json/","date":null,"categories":[],"body":""},{"title":"Articles by tag: Keyboard","baseurl":"","url":"/tag/keyboard/","date":null,"categories":[],"body":""},{"title":"Articles by tag: Kohana 3.2","baseurl":"","url":"/tag/kohana-3-2/","date":null,"categories":[],"body":""},{"title":"Articles by category: kohana","baseurl":"","url":"/topik/kohana/","date":null,"categories":[],"body":""},{"title":"Articles by tag: kohana","baseurl":"","url":"/tag/kohana/","date":null,"categories":[],"body":""},{"title":"Articles by tag: lucene","baseurl":"","url":"/tag/lucene/","date":null,"categories":[],"body":""},{"title":"Articles by tag: SVM","baseurl":"","url":"/tag/svm/","date":null,"categories":[],"body":""},{"title":"Articles by tag: Machine Learning","baseurl":"","url":"/tag/machine-learning/","date":null,"categories":[],"body":""},{"title":"Articles by tag: mybatis","baseurl":"","url":"/tag/mybatis/","date":null,"categories":[],"body":""},{"title":"Articles by tag: MySQL","baseurl":"","url":"/tag/mysql/","date":null,"categories":[],"body":""},{"title":"Articles by tag: OnClickListener","baseurl":"","url":"/tag/onclicklistener/","date":null,"categories":[],"body":""},{"title":"Articles by tag: openshift","baseurl":"","url":"/tag/openshift/","date":null,"categories":[],"body":""},{"title":"Articles by tag: paas","baseurl":"","url":"/tag/paas/","date":null,"categories":[],"body":""},{"title":"Articles by tag: Packagist","baseurl":"","url":"/tag/packagist/","date":null,"categories":[],"body":""},{"title":"Pages","baseurl":"","url":"/pages.html","date":null,"categories":[],"body":"All Pages About Articles by tag: Android Articles by tag: Apache 2.2 Articles by tag: Apache Maven 3.0.5 Articles by tag: Apache Articles by tag: Appstore Archive Articles by tag: ARFF Atom Feed Articles by tag: Bayesian Network Articles by tag: bonecp Articles by tag: c3p0 Articles by tag: Charts Articles by tag: Classifier Articles by tag: Cloud Foundry Articles by tag: cloud Articles by category: cloud Articles by tag: Composer Articles by tag: CSS 3 Articles by tag: D3.js Articles by tag: Data Mining Articles by tag: database-connection-pooling Articles by category: database Articles by tag: Debian Articles by tag: Decision Tree Articles by tag: GCC Articles by category: general Articles by tag: HTML 5 Home RSS Feed Articles by tag: iOS 6.1.3 Articles by tag: IOS 7.0 Articles by tag: iPhone Articles by tag: iPhone 3GS Articles by tag: itunes Articles by tag: Jasig CAS Articles by category: Java Articles by tag: java Articles by tag: jekyll Articles by tag: JSON Articles by tag: Keyboard Articles by tag: Kohana 3.2 Articles by category: kohana Articles by tag: kohana Articles by tag: lucene Articles by tag: SVM Articles by tag: Machine Learning Articles by tag: mybatis Articles by tag: MySQL Articles by tag: OnClickListener Articles by tag: openshift Articles by tag: paas Articles by tag: Packagist Pages Articles by tag: Pear Articles by tag: persistence-framework Articles by tag: Phar Articles by tag: PHP 5.3 Articles by category: php Articles by tag: PHP Articles by tag: PHP5-mysql Articles by tag: PHP5-MySQLND Articles by tag: PHP 5 Articles by tag: PHP CAS Articles by tag: Play! Framework Articles by tag: Presentasi Articles by category: programming Articles by tag: programming Articles by tag: REST Articles by tag: Reveal.js RSS Feed Articles by tag: Ruby Articles by tag: RVM Articles by tag: SD Card Articles by tag: search-engine Search Sitemap Articles by tag: Slim Framework Articles by category: staff.blog.ui.ac.id Articles by tag: SVG Articles by tag: SVM Articles by tag: Weka Articles by tag: wordpress Articles by tag: XCode Articles by tag: Yii Booster Articles by tag: Yii Framework Articles by tag: Yii Rights Articles by tag: Yii User Articles by tag: Yii Articles by tag: Yii 1 Articles by tag: Yii 2.0 Articles by tag: zend "},{"title":"Articles by tag: Pear","baseurl":"","url":"/tag/pear/","date":null,"categories":[],"body":""},{"title":"Articles by tag: persistence-framework","baseurl":"","url":"/tag/persistence-framework/","date":null,"categories":[],"body":""},{"title":"Articles by tag: Phar","baseurl":"","url":"/tag/phar/","date":null,"categories":[],"body":""},{"title":"Articles by tag: PHP 5.3","baseurl":"","url":"/tag/php-53/","date":null,"categories":[],"body":""},{"title":"Articles by category: php","baseurl":"","url":"/topik/php/","date":null,"categories":[],"body":""},{"title":"Articles by tag: PHP","baseurl":"","url":"/tag/php/","date":null,"categories":[],"body":""},{"title":"Articles by tag: PHP5-mysql","baseurl":"","url":"/tag/php5-mysql/","date":null,"categories":[],"body":""},{"title":"Articles by tag: PHP5-MySQLND","baseurl":"","url":"/tag/php5-mysqlnd/","date":null,"categories":[],"body":""},{"title":"Articles by tag: PHP 5","baseurl":"","url":"/tag/php5/","date":null,"categories":[],"body":""},{"title":"Articles by tag: PHP CAS","baseurl":"","url":"/tag/phpcas/","date":null,"categories":[],"body":""},{"title":"Articles by tag: Play! Framework","baseurl":"","url":"/tag/play-framework/","date":null,"categories":[],"body":""},{"title":"Articles by tag: Presentasi","baseurl":"","url":"/tag/presentasi/","date":null,"categories":[],"body":""},{"title":"Articles by category: programming","baseurl":"","url":"/topik/programming/","date":null,"categories":[],"body":""},{"title":"Articles by tag: programming","baseurl":"","url":"/tag/programming/","date":null,"categories":[],"body":""},{"title":"Articles by tag: REST","baseurl":"","url":"/tag/rest/","date":null,"categories":[],"body":""},{"title":"Articles by tag: Reveal.js","baseurl":"","url":"/tag/revealjs/","date":null,"categories":[],"body":""},{"title":"Articles by tag: Ruby","baseurl":"","url":"/tag/ruby/","date":null,"categories":[],"body":""},{"title":"Articles by tag: RVM","baseurl":"","url":"/tag/rvm/","date":null,"categories":[],"body":""},{"title":"Articles by tag: SD Card","baseurl":"","url":"/tag/sd-card/","date":null,"categories":[],"body":""},{"title":"Articles by tag: search-engine","baseurl":"","url":"/tag/search-engine/","date":null,"categories":[],"body":""},{"title":"Search","baseurl":"","url":"/search.html","date":null,"categories":[],"body":" "},{"title":"Articles by tag: Slim Framework","baseurl":"","url":"/tag/slim-framework/","date":null,"categories":[],"body":""},{"title":"Articles by category: staff.blog.ui.ac.id","baseurl":"","url":"/topik/staffblogui/","date":null,"categories":[],"body":""},{"title":"Articles by tag: SVG","baseurl":"","url":"/tag/svg/","date":null,"categories":[],"body":""},{"title":"Articles by tag: SVM","baseurl":"","url":"/tag/svm/","date":null,"categories":[],"body":""},{"title":"Articles by tag: Weka","baseurl":"","url":"/tag/weka/","date":null,"categories":[],"body":""},{"title":"Articles by tag: wordpress","baseurl":"","url":"/tag/wordpress/","date":null,"categories":[],"body":""},{"title":"Articles by tag: XCode","baseurl":"","url":"/tag/xcode/","date":null,"categories":[],"body":""},{"title":"Articles by tag: Yii Booster","baseurl":"","url":"/tag/yii-booster/","date":null,"categories":[],"body":""},{"title":"Articles by tag: Yii Framework","baseurl":"","url":"/tag/yii-framework/","date":null,"categories":[],"body":""},{"title":"Articles by tag: Yii Rights","baseurl":"","url":"/tag/yii-rights/","date":null,"categories":[],"body":""},{"title":"Articles by tag: Yii User","baseurl":"","url":"/tag/yii-user/","date":null,"categories":[],"body":""},{"title":"Articles by tag: Yii","baseurl":"","url":"/tag/yii/","date":null,"categories":[],"body":""},{"title":"Articles by tag: Yii 1","baseurl":"","url":"/tag/yii1/","date":null,"categories":[],"body":""},{"title":"Articles by tag: Yii 2.0","baseurl":"","url":"/tag/yii20/","date":null,"categories":[],"body":""},{"title":"Articles by tag: zend","baseurl":"","url":"/tag/zend/","date":null,"categories":[],"body":""},{"title":"Belajar MyBatis 3","baseurl":"","url":"/2011/11/belajar-mybatis-3","date":"2011-11-21 09:31:11 +0700","categories":["java","mybatis"],"body":"Setelah sekian lama akhirnya saya bisa menuliskan blog lagi, yups di web saya sendiri jefri-p.com , semester ini saya mendapat banyak matakuliah yang mempunyai banyak tugas akhir, salah satunya adalah PSBO (Pemrograman Sistem Berorientasi Objek) dan tugas akhirnya apalagi kalau bukan membuat sistem yang berorientasi objek, saya memilih Java sebagai bahasa pemrogramannya walaupun saya belum terlalu mahir java . Demi memudahkan project tersebut saya memilih MyBatis Framework (yang dulunya iBatis ). ibatis mybatis Apakah MyBatis itu? MyBatis Framework adalah Data Mapper framework yang membuat kita lebih mudah menggunakan database relational dengan aplikasi berorientasi objek. The MyBatis data mapper framework makes it easier to use a relational database with object-oriented applications. MyBatis couples objects with stored procedures or SQL statements using a XML descriptor. Simplicity is the biggest advantage of the MyBatis data mapper over object relational mapping tools. To use the MyBatis data mapper, you rely on your own objects, XML, and SQL. There is little to learn that you don’t already know. With the MyBatis Data Mapper, you have the full power of both SQL and stored procedures at your fingertips. ( www.mybatis.org ) Tanpa banyak basa-basi mari kita pelajari contoh pertama menggunakan MyBatis Pre-Requisites Saya menggunakan: IDE: Eclipse (atau bisa yang lain) DataBase: MySQL Libs/jars: Mybatis , MySQL conector pertama kita buat database java, dan tabel contact (dalam hal ini menggunakan MySQL) Sample Database 1 DROP TABLE IF EXISTS ` contact ` ; 2 CREATE TABLE ` contact ` ( 3 ` id ` int ( 15 ) NOT NULL AUTO_INCREMENT , 4 ` namalengkap ` varchar ( 50 ) DEFAULT NULL , 5 ` phone ` varchar ( 20 ) DEFAULT NULL , 6 ` email ` varchar ( 50 ) DEFAULT NULL , 7 PRIMARY KEY ( ` id ` ) 8 ); 9 INSERT INTO contact ( id , namalengkap , phone , email ) VALUES ( 1 , 'Jefri Pakpahan' , '1245123' , 'email@jefri-p.com' ); 10 INSERT INTO contact ( id , namalengkap , phone , email ) VALUES ( 2 , 'Jefri Pakpahan' , '1245123' , 'email@jefri-p.com' ); 11 INSERT INTO contact ( id , namalengkap , phone , email ) VALUES ( 3 , 'Jefri Pakpahan' , '1245123' , 'email@jefri-p.com' ); 12 INSERT INTO contact ( id , namalengkap , phone , email ) VALUES ( 4 , 'Jefri Pakpahan' , '1245123' , 'email@jefri-p.com' ); 1. Contact Beans / POJO 1 package org . mycontact . example . beans ; 2 public class Contact { 3 Integer id ; 4 String namalengkap ; 5 String phone ; 6 String email ; 7 public Integer getId () { 8 return id ; 9 } 10 public void setId ( Integer id ) { 11 this . id = id ; 12 } 13 public String getNamaLengkap () { 14 return namalengkap ; 15 } 16 public void setNamaLengkap ( String namalengkap ) { 17 this . namalengkap = namalengkap ; 18 } 19 public String getPhone () { 20 return phone ; 21 } 22 public void setPhone ( String phone ) { 23 this . phone = phone ; 24 } 25 public String getEmail () { 26 return email ; 27 } 28 public void setEmail ( String email ) { 29 this . email = email ; 30 } 31 } 2. ContactMapper.xml Berikut adalah ContactMapper.xml 1 <?xml version=\"1.0\" encoding=\"UTF-8\"?> 2 <!DOCTYPE mapper 3 PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\" 4 \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\"> 5 6 <mapper namespace= \"Contact\" > 7 <resultMap id= \"result\" type= \"Contact\" > 8 <result property= \"id\" column= \"id\" /> 9 <result property= \"namalengkap\" column= \"namalengkap\" /> 10 <result property= \"phone\" column= \"phone\" /> 11 <result property= \"email\" column= \"email\" /> 12 </resultMap> 13 14 <insert id= \"insert\" parameterType= \"Contact\" > 15 INSERT INTO contact 16 (namalengkap, phone, email) 17 VALUES 18 (#{namalengkap}, #{phone}, #{email}) 19 </insert> 20 21 <update id= \"update\" parameterType= \"Contact\" > 22 UPDATE contact 23 SET 24 namalengkap = #{namalengkap}, 25 phone = #{phone}, 26 email = #{email} 27 WHERE 28 id = #{id} 29 </update> 30 31 <delete id= \"deleteById\" parameterType= \"int\" > 32 DELETE from contact WHERE id = #{value} 33 </delete> 34 35 <select id= \"getAll\" resultMap= \"result\" > 36 SELECT * FROM contact 37 </select> 38 39 <select id= \"getById\" parameterType= \"int\" resultMap= \"result\" > 40 SELECT 41 id, namalengkap, phone, email 42 FROM 43 contact 44 WHERE 45 id = #{value} 46 </select> 47 </mapper> 3. Register ContactMapper.xml ke configuration.xml 1 package org . mycontact . example . dao ; 2 import java.io.FileNotFoundException ; 3 import java.io.IOException ; 4 import java.io.Reader ; 5 import org.apache.ibatis.io.Resources ; 6 import org.apache.ibatis.session.SqlSessionFactory ; 7 import org.apache.ibatis.session.SqlSessionFactoryBuilder ; 8 public class MyBatisConnectionFactory { 9 private static SqlSessionFactory sqlSessionFactory ; 10 static { 11 try { 12 String resource = \"org/mycontact/example/xml/configuration.xml\" ; 13 Reader reader = Resources . getResourceAsReader ( resource ); 14 if ( sqlSessionFactory == null ) { 15 sqlSessionFactory = new SqlSessionFactoryBuilder (). build ( reader ); 16 } 17 } 18 catch ( FileNotFoundException fileNotFoundException ) { 19 fileNotFoundException . printStackTrace (); 20 } 21 catch ( IOException iOException ) { 22 iOException . printStackTrace (); 23 } 24 } 25 public static SqlSessionFactory getSqlSessionFactory () { 26 return sqlSessionFactory ; 27 } 28 } 4. MyBatisConnectionFactory 1 package org . mycontact . example . dao ; 2 3 import java.io.FileNotFoundException ; 4 import java.io.IOException ; 5 import java.io.Reader ; 6 7 import org.apache.ibatis.io.Resources ; 8 import org.apache.ibatis.session.SqlSessionFactory ; 9 import org.apache.ibatis.session.SqlSessionFactoryBuilder ; 10 11 public class MyBatisConnectionFactory { 12 private static SqlSessionFactory sqlSessionFactory ; 13 14 static { 15 try { 16 17 String resource = \"org/mycontact/example/xml/configuration.xml\" ; 18 Reader reader = Resources . getResourceAsReader ( resource ); 19 20 if ( sqlSessionFactory == null ) { 21 sqlSessionFactory = new SqlSessionFactoryBuilder (). build ( reader ); 22 } 23 } 24 catch ( FileNotFoundException fileNotFoundException ) { 25 fileNotFoundException . printStackTrace (); 26 } 27 catch ( IOException iOException ) { 28 iOException . printStackTrace (); 29 } 30 } 31 32 public static SqlSessionFactory getSqlSessionFactory () { 33 34 return sqlSessionFactory ; 35 } 36 } 5. ContactDAO 1 package org . mycontact . example . dao ; 2 3 import java.io.FileNotFoundException ; 4 import java.io.IOException ; 5 import java.io.Reader ; 6 7 import org.apache.ibatis.io.Resources ; 8 import org.apache.ibatis.session.SqlSessionFactory ; 9 import org.apache.ibatis.session.SqlSessionFactoryBuilder ; 10 11 public class MyBatisConnectionFactory { 12 private static SqlSessionFactory sqlSessionFactory ; 13 14 static { 15 try { 16 17 String resource = \"org/mycontact/example/xml/configuration.xml\" ; 18 Reader reader = Resources . getResourceAsReader ( resource ); 19 20 if ( sqlSessionFactory == null ) { 21 sqlSessionFactory = new SqlSessionFactoryBuilder (). build ( reader ); 22 } 23 } 24 catch ( FileNotFoundException fileNotFoundException ) { 25 fileNotFoundException . printStackTrace (); 26 } 27 catch ( IOException iOException ) { 28 iOException . printStackTrace (); 29 } 30 } 31 32 public static SqlSessionFactory getSqlSessionFactory () { 33 34 return sqlSessionFactory ; 35 } 36 } 6. Example Main program lalu mencoba program kita 1 package org . mycontact . example . main ; 2 3 import java.util.List ; 4 5 import org.mycontact.example.beans.Contact ; 6 import org.mycontact.example.dao.ContactDAO ; 7 8 public class MainExample { 9 10 public static void main ( String [] args ) { 11 12 ContactDAO contactdao = new ContactDAO (); 13 14 //insert 15 Contact contactIns = new Contact (); 16 contactIns . setNamaLengkap ( \"Jee Hernandez\" ); 17 contactIns . setEmail ( \"jee@email.com\" ); 18 contactIns . setPhone ( \"1235\" ); 19 contactdao . insert ( contactIns ); 20 21 //select last Id 22 Contact contact0 = contactdao . selectByLastId (); 23 System . out . println ( contact0 . getId () + \":\" + contact0 . getEmail () + \":\" 24 + contact0 . getNamaLengkap () + \":\" + contact0 . getPhone ()); 25 26 //select by id = 2 27 Contact contact1 = contactdao . selectById ( 2 ); 28 System . out . println ( contact1 . getId () + \":\" + contact1 . getEmail () + \":\" 29 + contact1 . getNamaLengkap () + \":\" + contact1 . getPhone ()); 30 31 //delete id 4 32 contactdao . delete ( 4 ); 33 34 //update 5 35 Contact contactEdit = new Contact (); 36 contactEdit . setNamaLengkap ( \"Jefri Edit\" ); 37 contactEdit . setEmail ( \"Jefri@email.com\" ); 38 contactEdit . setPhone ( \"123456\" ); 39 contactEdit . setId ( 2 ); 40 contactdao . update ( contactEdit ); 41 42 //select all 43 List < Contact > contact2 = contactdao . selectAll (); 44 for ( Contact contact : contact2 ) { 45 System . out . println ( contact . getId () + \":\" + contact . getEmail () + \":\" 46 + contact . getNamaLengkap () + \":\" + contact . getPhone ()); 47 } 48 } 49 } Jika Anda kurang paham ataupun kurang jelas, ada baiknya membaca User Guide MyBatis. Selamat Berimajinasi :) NB : Maaf syntaxhighlighternya agak error ketika memasukan email. Sumber "},{"title":"Membuat Search Engine dengan Zend Search Lucene","baseurl":"","url":"/2012/01/membuat-search-engine-dengan-zend-search-lucene","date":"2012-01-12 07:34:19 +0700","categories":["php","programming"],"body":"Setelah sekian lama tidak mengisi blog, akhirnya baru ada niat ngisi blog lagi. kali ini saya akan mengangkat topik yang berbeda dengan sebelumnya belajar mybatis 3 yaitu Membuat Search Engine dengan Zend Search Lucene. Saya membuat tutorial di karena kan karena ada tugas Temu Kembali Informasi (TKI), ya lagi-lagi tugas kuliah (namanya juga anak kuliahan). Zend_Search_Lucene adalah full-text search engine framework porting dari Apache Lucene dan bagian dari Zend Framework , Anda dapat mendownload di web tersebut . Zend_Search_Lucene menjanjikan cara sederhana untuk menambahkan fungsi pencarian ke aplikasi tanpa membutuhkan tambahan ekstensi php atau bahkan database. Langsung saja kita praktikan 1. Membuat Index Sebelum kita mencari data terlebih dahulu Anda harus membuat Indexing yang akan mengumpulkan, mem-parsing, dan menyimpan data untuk memudahkan pencarian informasi yang cepat dan akurat Disini kita akan mencoba mengindex file xml File data.xml 1 <?xml version=\"1.0\" encoding=\"iso-8859-1\"?> 2 <documents> 3 <document> 4 <id> 1 </id> 5 <title> first title on document </title> 6 <content> Ilkomers content </content> 7 <published> 1012325463 </published> 8 </document> 9 <document> 10 <id> 3 </id> 11 <title> Search Lucene by Jefri Rahmat Yusuf </title> 12 <content> tki search lucene from xml data </content> 13 <published> 1012356463 </published> 14 </document> 15 <document> 16 <id> 4 </id> 17 <title> Temu Kembali Informasi </title> 18 <content> Temu kembali informasi (tki) with lucene by Jefri Rahmat Yusuf another document </content> 19 <published> 1012445463 </published> 20 </document> 21 <document> 22 <id> 6 </id> 23 <title> another Title in Lucene </title> 24 <content> This is another document for lucene </content> 25 <published> 1013325467 </published> 26 </document> 27 </documents> File indexing.php 1 <? php 2 require_once 'Zend/Search/Lucene.php' ; 3 4 function sanitize ( $input ) { 5 return htmlentities ( strip_tags ( $input )); 6 } 7 8 $xml = 'data.xml' ; 9 //cek file xml 10 if ( file_exists ( $xml )){ 11 $xml = simplexml_load_file ( $xml ); 12 } else { 13 exit ( 'Error.' ); 14 } 15 16 //directory data temporary untuk indexing 17 $xml_index = 'index/xml_index' ; 18 19 $index = new Zend_Search_Lucene ( $xml_index , true ); 20 // index setiap item 21 foreach ( $xml as $item ) { 22 if ( $item -> title && $item -> content ) { 23 $doc = new Zend_Search_Lucene_Document (); 24 25 $doc -> addField ( Zend_Search_Lucene_Field :: Keyword ( 'title' , sanitize ( $item -> title ))); 26 $doc -> addField ( Zend_Search_Lucene_Field :: Text ( 'content' , sanitize ( $item -> content ))); 27 $doc -> addField ( Zend_Search_Lucene_Field :: UnIndexed ( 'published' , sanitize ( $item -> published ))); 28 29 echo \" \\t Mengindex: <b>\" . $item -> title . \"</b><br/>\" ; 30 $index -> addDocument ( $doc ); 31 } 32 } 33 $index -> commit (); 34 echo '<br/>' . $index -> count () . \" Dokumen terindex. \\n \" ; 35 ?> Pertama yang dilakukan adalah cek file xml 1 $xml = 'data.xml' ; 2 //cek file xml 3 if ( file_exists ( $xml )){ 4 $xml = simplexml_load_file ( $xml ); 5 } else { 6 exit ( 'Error.' ); 7 } Lalu tentukan directori untuk menampung data indexing 1 //directory data temporary untuk indexing 2 $xml_index = 'index/xml_index' ; Lalu indexing data xml 1 $index = new Zend_Search_Lucene ( $xml_index , true ); 2 // index setiap item 3 foreach ( $xml as $item ) { 4 if ( $item -> title && $item -> content ) { 5 //buat dan index dokumen 6 } 7 } 8 $index -> commit (); 9 echo '<br/>' . $index -> count () . \" Dokumen terindex. \\n \" ; Untuk membuat dokumen ke index, kita harus membuat document object dan field konten yang spesifik yang akan kita index, dalam hal ini kita akan mengindex title, content dan published. 1 $doc -> addField ( Zend_Search_Lucene_Field :: Keyword ( 'title' , sanitize ( $item -> title ))); 2 $doc -> addField ( Zend_Search_Lucene_Field :: Text ( 'content' , sanitize ( $item -> content ))); 3 $doc -> addField ( Zend_Search_Lucene_Field :: UnIndexed ( 'published' , sanitize ( $item -> published ))); 4 5 echo \" \\t Mengindex: <b>\" . $item -> title . \"</b><br/>\" ; 6 $index -> addDocument ( $doc ); Item-item yang akan di index terlebih dahulu di sanitasi (sanitize). Berikut adalah keterangan dari masing-masing Zend_Search_Lucene_Field Zend_Search_Lucene_Field::Keyword // Field is not tokenized, but is indexed and stored within the index. Zend_Search_Lucene_Field::UnIndexed // Field is not tokenized nor indexed, but is stored in the index. Zend_Search_Lucene_Field::Binary // Binary String valued Field that is not tokenized nor indexed, but is stored in the index. Zend_Search_Lucene_Field::Text // Field is tokenized and indexed, and is stored in the index. Zend_Search_Lucene_Field::UnStored // Field is tokenized and indexed, but is not stored in the index. 2. Pencarian Index Sebelumnya kita sudah membuat Zend_Search_Lucene index pada data, mari kita implementasikan pencarian. 1 <? php 2 require_once 'Zend/Search/Lucene.php' ; 3 4 //buka file index 5 $index = new Zend_Search_Lucene ( 'index/xml_index' ); 6 7 $query = 'jefri' ; 8 9 if ( strlen ( $query ) < 4 ) 10 { 11 die ( 'Kata-kata harus lebih dari 3 huruf' ); 12 } 13 14 $hits = $index -> find ( $query ); 15 echo \"Index Mempunyai \" . $index -> count () . \" dokumen.<br/>\" ; 16 echo \"Pencarian untuk query '\" . $query . \"' menghasilkan \" . count ( $hits ) . \" hits<br/>\" ; 17 18 foreach ( $hits as $hit ) { 19 echo \"<pre>\" ; 20 echo $hit -> title . \"<br/>\" ; 21 echo $hit -> content . \"<br/>\" ; 22 echo \" \\t Score: \" . sprintf ( '%.2f' , $hit -> score ) . \"<br/>\" ; 23 } 24 ?> Kita include library , dan buka file index dan cari term lalu looping hasil, kita dapat melakukan pencarian query dengan multiple query terms . Zend_Search_Lucene sangat Powerfull dan simpel, untuk dokumentasi lengkap dapat dilihat di file document yang ada di Zend Framework atau http://framework.zend.com/manual/en/zend.search.lucene.html . Sekian. sumber bacaan : http://devzone.zend.com/397/roll-your-own-search-engine-with-zend_search_lucene/ "},{"title":"PHP Framework : Mengenal Framework Kohana 3","baseurl":"","url":"/2012/04/php-framework-mengenal-framework-kohana-3","date":"2012-04-18 07:56:18 +0700","categories":["kohana","php"],"body":"Kohana 3  adalah framework elegan PHP5 yang menggunakan pola arsitektur Hierarchical Model View Controller (HMVC)  yang kaya akan komponen untuk membangun aplikasi web.  Ada beberapa alasan mengapa Anda harus memilih Kohana sebagai PHP framework tetapi yang utama adalah keamanan, ringan dan mudah digunakan.   Dasar HMVC Cara mudah untuk berpikir HMVC adalah memikirkan AJAX tanpa tambahan pemanggilan server. Misalnya, jika Anda memiliki tindakan untuk AJAX yang menampilkan daftar pengguna, Anda dapat menggunakan kembali tindakan yang di controller lain, daripada menduplikasi metode ini. Salah satu fitur yang paling powerful di Kohana 3 adalah kemampuan untuk memanggil permintaan lain setiap saat selama request flow. Pendekatan MVC berlapis memungkinkan Anda untuk merakit sebuah klien kompleks tier dan benar-benar memanfaatkan keuntungan objek oriented. Cascading Filesystem Filesystem Kohana adalah hirarki untuk struktur direktori sama yang cascade. Hirarki di Kohana (digunakan bila file dimuat oleh Kohana ::find_file) adalah dengan urutan sebagai berikut.: Arsitektur Berlapis - Mengurangi ketergantungan antara bagian yang berbeda dari program - Mendorong reusable kode, komponen dan modul - Meningkatkan extensibility dan mengurangi maintenance - Beberapa digunakan untuk desain HMVC dalam arsitektur client-tier - Antarmuka elemen atau widget Modular - Aplikasi dan Kontrol Menu - Interaksi Server - Reusable Application Flows File yang berada di direktori yang lebih tinggi urutan lokasi include didahulukan atas file dengan nama yang sama di bawahnya urutan, dimana memungkinkan untuk overload file apa saja dengan menempatkan sebuah file dengan nama yang sama di direktori \"lebih tinggi\". Path modules Hal ini ditetapkan sebagai associative array menggunakan Kohana::modules di APPPATH / bootstrap.php. Setiap nilai dari array akan dicaridalam urutan bahwa modules sudah didefinisikan. Path system Didefinisikan sebagai SYSPATH di index.php. Nilai default adalah system. Semua file \"inti\" utama atau kelas didefinisikan di sini. Path application Merupakan tempat pengembangan aplikasi  yang di dalamnya akan terdapat berbagai macam direktori yang berhubungan dengan aplikasi kita termasuk folder cache dan log. Classes adalah tempat di mana kita bisa melakukan overriding terhadap class yang berasal dari core system dan modules, juga sebagai tempat untuk meletakkan Controller serta Model. Views untuk meletakkan view yang akan dipanggil pada Controller. Instalasi Kohana Framework - Terlebih dahulu download   kohana 3 melalui  http://kohanaframework.org/download  ataupun dapat melalui github  https://github.com/kohana/kohana  (dalam hal ini adalah kohana 3.2) - unzip kohana-3.2.0.zip - Ubah nama folder kohana-3.2-master-1 menjadi kohana dan masukkan kedalam docroot dari webserver Anda - Buat folder bernama cache dan logs di dalam folder application dan chmod 666 - Buka browser Anda dan arahkan ke url http://localhost/kohana maka akan memanggil skrip install.php dan memeriksa persyaratan server Anda. Kohana dapat berjalan di hampir semua environment, dengan minimum persyaratan : - Apache server - PHP versi >= 5.2.3 Anda dapat menginstall XAMPP ataupun WAMP sebagai web server dan database server (Apache, PHP, MySql Server) - Setting pada bootstrap.php jika kohana ada berada dalam subdirectory. Pada line 82, ubah menjadi Kohana::init(array( 'base_url' => '/kohana', )); Jika berhasil maka akan muncul tampilan seperti berikut : Jika sudah berhasil dalam pengecekan kebutuhan dari kohana, lalu hapus file install.php, maka akan muncul seperti ini : hello, world! Yup, Anda berhasil melakukan instalasi kohana 3, it's easy isn't it? sekarang Anda dapat membuat project menggunakan framework kohana. Tutorial berikutnya akan mempelajari lebih dalam tentang kohana 3 berikut dengan contohnya. Bersambung .... Bahan bacaan : http://kohanaframework.org/ http://kerkness.ca/kowiki/doku.php "},{"title":"Mencicipi Cloud Hosting gratis di OpenShift by Red Hat","baseurl":"","url":"/2012/06/mencicipi-cloud-hosting-gratis-di-openshift-red-hat","date":"2012-06-20 05:44:41 +0700","categories":["cloud"],"body":"Apa itu cloud computing? dalam blog teknoinfo.web.id dijelaskan bahwa Cloud Computing adalah topik yang sedang hangat dibicarakan dan lambat laun para IT professional akan mengadaptasi teknologi ini. Di blog tersebut pun dijelaskan beberapa teknologi cloud service, seperti : - Infrastucture as a Service (IaaS) - Platform as a Service (PaaS) -  Software  as a Service (SaaS) Disini kita akan mencoba menggunakan salah satu cloud service (Paas) gratis pada OpenShift by Red Hat . Karena masih versi Beta (gratis) dan belum commercial (berbayar) tidak disarankan untuk membuat website yang akan di pakai untuk waktu yang lama di OpenShift. Sebelumnya kita perlu register accout OpenShift dan menginstall client tools . butuh menginstall : - Ruby - RubyGems  Lalu setelah register dan menginstall client tools, login ke Account OpenShift di  https://openshift.redhat.com/app/login  , setelah masuk ke dashboard Openshift, kita set dahulu namespace agar aplikasi kita unik dan menghindari url yang sama, klik tab My Account Lalu klik tab create application. Pilih aplikasi Framework / CMS yang akan kita install, disini saya memilih WordPress, lalu masukkan nama aplikasi yang akan kita buat dalam namespace ea-rhcloud.com disini saya memakai http://blog.ea-rhcloud.com klik Create Application. Tunggu hingga proses Configure new Application selesai. Ya Anda telah berhasil menginstall WordPress di OpenShift, buka alamat url nya, disini http://blog-ea.rhcloud.com dan jangan lupa mengganti password default adminnya. jika Anda ingin mengclone directory dari WordPress dapat menggunakan git clone (url yang di sebutkan pada akhir instalasi).  contoh : git clone ssh://bc8208f0819a43298775553eee04b86d@blog-ea.rhcloud.com/~/git/blog.git/ Anda juga dapat mengimport data WordPress menggunakan phpmyadmin, tetapi sebelumnya harus Add Cartridge, lalu pilih phpMyAdmin 3.4, maka Anda dapat mengimport melalui url http://blog-ea.rhcloud.com/phpmyadmin. NB : website saya http://www.jefri-p.com sedang mencoba OpenShift, mudah-mudahan gratisannya lama (hidup gratisan!). Sekian dan selamat mencoba (mumpung gratis) :D. Sumber Bacaan : http://teknoinfo.web.id/teknologi-cloud-computing/ https://openshift.redhat.com/app/getting_started "},{"title":"Kohana 3.2 : Membuat Template","baseurl":"","url":"/2012/07/kohana-3-2-membuat-template","date":"2012-07-09 09:52:09 +0700","categories":["kohana","php"],"body":"Dalam pembuatan sebuah website/sistem informasi template merupakan elemen penting dalam penyajian tampilan sebuah website, disini akan dijelaskan penggunaan template pada Kohana 3.2, agar pembuatan suatu website lebih efisien dan simpel. Melanjutkan Blog sebelumnya , defaultnya template kohana membuat controller turunan dari Controller_Template, namun jika kita membuat 1 template untuk semua kita harus menyertakan title, javascript, css dll yang membuat wasting code. Oleh karena itu dibutuhkan sebuah suatu controller template baru yang akan diturunkan ke controller kita yang mempunyai template yang sama. 1. kita buat template kita yang berbentuk HTML (dalam hal ini menggunakan Twitter Bootstrap ), tinggal menambahkan beberapa tag php. - title (string) : title dari page - scripts (array) : array dari javascripts yang dibutuhkan pada page - styles (array) : array dari CSS yang dibutuhkan pada page - content (string/array) : isi dari konten website ok, just show the code :) 1 <! DOCTYPE html > 2 < html lang = \"en\" > 3 < head > 4 < meta charset = \"utf-8\" > 5 < title > Kohana 3.2 Templating with Twitter Bootstrap <? php echo ( ! empty ( $title )) ? Html :: chars ( \" - \" . $title ) : '' ; ?> </title> 6 <meta name= \"viewport\" content= \"width=device-width, initial-scale=1.0\" > 7 <meta name= \"description\" content= \"\" > 8 <meta name= \"author\" content= \"\" > 9 10 <!-- Le styles --> 11 <style> 12 body '{ 13 padding-top: 60px; /* 60px to make the container go all the way to the bottom of the topbar */ 14 }' 15 </style> 16 <?php foreach ( $styles as $file => $type ) echo HTML :: style ( $file , array ( 'media' => $type )), \" \\n \" ?> 17 <?php foreach ( $scripts as $file ) echo HTML :: script ( $file ), \" \\n \" ?> 18 19 <!-- Le HTML5 shim, for IE6-8 support of HTML5 elements --> 20 <!--[if lt IE 9]> 21 <script src=\"http://html5shim.googlecode.com/svn/trunk/html5.js\"></script> 22 <![endif]--> 23 24 <!-- Le fav and touch icons --> 25 <link rel= \"shortcut icon\" href= \"assets/ico/favicon.ico\" > 26 <link rel= \"apple-touch-icon-precomposed\" sizes= \"144x144\" href= \"assets/ico/apple-touch-icon-144-precomposed.png\" > 27 <link rel= \"apple-touch-icon-precomposed\" sizes= \"114x114\" href= \"assets/ico/apple-touch-icon-114-precomposed.png\" > 28 <link rel= \"apple-touch-icon-precomposed\" sizes= \"72x72\" href= \"assets/ico/apple-touch-icon-72-precomposed.png\" > 29 <link rel= \"apple-touch-icon-precomposed\" href= \"assets/ico/apple-touch-icon-57-precomposed.png\" > 30 </head> 31 32 <body> 33 34 <div class= \"navbar navbar-fixed-top\" > 35 <div class= \"navbar-inner\" > 36 <div class= \"container\" > 37 <a class= \"btn btn-navbar\" data-toggle= \"collapse\" data-target= \".nav-collapse\" > 38 <span class= \"icon-bar\" ></span> 39 <span class= \"icon-bar\" ></span> 40 <span class= \"icon-bar\" ></span> 41 </a> 42 <a class= \"brand\" href= \"#\" > Jefri </a> 43 <div class= \"nav-collapse\" > 44 <ul class= \"nav\" > 45 <li class= \"active\" ><a href= \"#\" > Home </a></li> 46 <li><a href= \"#about\" > About </a></li> 47 <li><a href= \"#contact\" > Contact </a></li> 48 </ul> 49 </div> <!--/.nav-collapse --> 50 </div> 51 </div> 52 </div> 53 54 <div class= \"container\" > 55 <?php echo $content ?> 56 </div> <!-- /container --> 57 58 </body> 59 </html> 2. Buat Controller_Template baru untuk turunan controller yang akan kita pakai dengan template yang sama. sehingga akan terlihat seperti ini : Controller_Template_Layout extends Controller_Template Controller_Page extends Controller_Template_Layout Jadi setiap controller akan meng-extends Controller_Template_Layout 1 <? php defined ( 'SYSPATH' ) or die ( 'No direct access allowed.' ); 2 3 class Controller_Template_Layout extends Controller_Template 4 { 5 public $template = 'template/layout' ; 6 /** 7 * The before() method is called before your controller action. 8 * In our template controller we override this method so that we can 9 * set up default values. These variables are then available to our 10 * controllers if they need to be modified. 11 */ 12 public function before () 13 { 14 parent :: before (); 15 $this -> session = Session :: instance (); 16 17 if ( $this -> auto_render ) 18 { 19 // Initialize empty values 20 $this -> template -> title = '' ; 21 $this -> template -> content = '' ; 22 $this -> template -> templates = '' ; 23 24 $this -> template -> styles = array (); 25 $this -> template -> scripts = array (); 26 } 27 } 28 29 /** 30 * The after() method is called after your controller action. 31 * In our template controller we override this method so that we can 32 * make any last minute modifications to the template before anything 33 * is rendered. 34 */ 35 public function after () 36 { 37 if ( $this -> auto_render ) 38 { 39 $styles = array ( 40 'assets/css/bootstrap.css' => 'screen, projection' , 41 'assets/css/bootstrap-responsive.css' => 'screen, projection' , 42 ); 43 44 $scripts = array ( 45 'assets/js/jquery-1.7.2.min.js' , 46 'assets/js/bootstrap.js' , 47 ); 48 49 $this -> template -> styles = array_merge ( $styles , $this -> template -> styles ); 50 $this -> template -> scripts = array_merge ( $scripts , $this -> template -> scripts ); 51 } 52 parent :: after (); 53 } 54 55 } 3. Membuat controller yang akan menggunakan template yang sudah kita buat. 1 <? php defined ( 'SYSPATH' ) or die ( 'No direct script access.' ); 2 3 class Controller_Page extends Controller_Template_Layout { 4 5 public function action_index () 6 { 7 $this -> template -> title = __ ( 'Welcome to kohana 3.2 Template' ); 8 9 $this -> template -> content = View :: factory ( 'page/home' ); 10 } 11 12 } Template untuk kohana 3.2 siap di pakai. Download melalui github Kohana Template Sumber Bacaan : - http://kerkness.ca/kowiki/doku.php - http://kohanaframework.org/3.2/guide/kohana/mvc/views "},{"title":"Hello World!","baseurl":"","url":"/2012/09/hello-world","date":"2012-09-11 14:42:40 +0700","categories":["sesuatu"],"body":"Hello World! Yup setelah sekian lama bekerja di UI baru hari ini mengisi blog, saya melihat blog teman saya Blog JP jadi turut memotivasi saya untuk mengisi blog disini. Mudah-mudahan kalau malasnya tidak keluar bisa rajin untuk mengisi blog ini, karena saya punya blog lain yang jarang diupdate,hehehe..   See ya.. "},{"title":"Studi Kecil Klasifikasi Bayesian Network, Decision Tree dan SVM untuk Machine Learning pada Weka","baseurl":"","url":"/2012/09/studi-kecil-klasifikasi-bayesian-network-decision-tree-dan-svm-untuk-machine-learning-pada-weka","date":"2012-09-14 06:40:07 +0700","categories":["staffblogui","java"],"body":" Iseng-iseng melakukan studi kecil-kecilan melakukan klasifikasi untuk Machine Learning pada Weka, karena saya akan menggunakan salah satu klasifikasi untuk tugas akhir dan akhirnya saya mencobanya pada weka. Sewaktu kuliah saya pernah diajarkan klasifikasi menggunakan weka pada kuliah Data Mining, namun karena saya termasuk mahasiswa yang malas dan kurang memperhatikan (penyakit mahasiswa, ato saya aja kali ya) sehingga mata kuliah tersebut kurang bisa di tangkap oleh saya dengan baik. Klasifikasi yang akan saya coba adalah Bayesian Network, Decision Tree dan Support Vector Machine (SVM). apa hanya itu classifier yang ada?Tentu tidak, banyak sekali klasifikasi yang ada namun ketiga classifier tersebut yang lumayan canggih sedang populer. oke, langsung saja kita akan membahas ketiga classifier tersebut, oh iya ketiga classifier tersebut saya coba pada software Data Mining Weka 3.6.7 dengan tambahan libSVM (library terpisah dari weka). Pertama-tama tentukan datanya , disini saya menggunakan data yang sudah ada di weka yaitu iris.arff, lalu kita pakai filter Discretize untuk mendiskretisasikan nilai numerik yang ada pada data. Lalu pada tab classifiy kita memilih classifier yang akan kita gunakan, disini Bayesian Network, Decision Tree dan SVM. Test Options yang kita gunakan adalah Cross-Validation dengan nilai, berikut pilihan Test Options : • Use training set : data uji dengan data latih sama • Supplied test set : data uji dengan data latih benar-benar berbeda • Cross-Validation : membagi data menjadi k-subset. Misalnya Folds yang digunakan 10, 9 akan  digunakan sebagai data training dan 1 sebagai data uji sampai seluruh data. • Percentage Split : Membagi data sesuai dengan parameter yang akan menjadi data training. Berikut hasilnya : Bayesian Network Decision Tree SVM Dilihat dari hasil Akurasi / Correctly Classified Instances SVM mendapatkan akurasi yang lebih tinggi dibanding dengan Bayesian Network dan Decision Tree, namun dalam proses klasifikasi SVM memproses lebih lama. Mungkin dengan data yang berbeda dapat menghasilkan akurasi yang berbeda, tinggal mencoba-coba dan pakai yang terbaik. Sumber Bacaan : - Weka Manual - LibSVM "},{"title":"Jatuh hati pada layanan Cloud Foundry!","baseurl":"","url":"/2012/10/jatuh-hati-pada-layanan-cloud-foundry","date":"2012-10-08 08:07:07 +0700","categories":["staffblogui","java"],"body":"Setelah beberapa bulan saya menggunakan layanan cloud Openshift untuk mencoba-coba layanan cloud PaaS yang 'gratis', gratis disini tidak berbayar tetapi dibatasi namun cukup untuk mencoba-coba layanan cloud (biar ga ketinggalan jaman :D). Layanan tersebut mendukung Java, Ruby, Node.js, Perl serta PHP , kebetulan saya lebih mengerti PHP jadi menarik perhatian saya dan sudah mencoba openshift untuk blog saya  (wordpress) menggunakan layanan tersebut. Layanan cloud pada openshift tergolong sangat stabil dan cepat (dalam hal akses website dan update plugin blog). Namun baru-baru ini saya mencoba layanan Cloud Foundry yang merupakan layanan cloud PaaS juga, dari segi layanan belum mendukung PHP (atau saya belum tahu) tetapi keterbatasan yang ada di Openshift dalam hal command untuk mengupload menggunakan git lewat ssh yang mana tidak bisa saya lakukan untuk ssh keluar dari sini (kantor), kelebihan menggunakan Cloud Foundry ialah GRATIS (juga) dan dapat mengupload aplikasi yang sudah di compile ke cloud tanpa harus menggunakan git yang ssh keluar, sehingga memudahkan saya untuk mengupload. Commandnya adalah menggunakan cloud foundry command line yaitu vmc yang dapat diinstall dengan menggunakan gem install vmc (yang sebelumnya sudah menginstall ruby dan gem), ya cukup mudah. Saya mencoba mengupload sampel aplikasi Play! Framework  melalui tutorial , kenapa Play!?ya karena saya kesengsem dan sedang mempelajari Framework tersebut yang mendukung bahasa Java dan Scala, what a nice ;) Pertama masuk ke directory sample play -> cd /Users/jefripakpahan/play/play-2.0.4/samples/java/zentasks Dari directory tersebut kita compile aplikasi sampel menjadi aplikasi zip yang akan di upload dengan command : play2 -Dconfig.file=conf.cf dist Dan akan menghasilkan zentasks-1.0.zip yang akan di upload, berikut screenshoot Berikutnya adalah menguploadnya ke Cloud Foundry dengan command : vmc push --path=dist/zentask-1.0.zip Dengan menggunakan services (db) postgresql Dan setelah sukses tinggal buka url Application Deployed URL semisal : http://zentasks-jef.cloudfoundry.com Halaman login Halaman Home So easy right? Jadi ingin memperdalam lagi Play! Framework. :) *Tambahan : Play 2.0.4 untuk bisa jalan di Cloud Foundry butuh tambahan library auto reconfiguration , taruh di folder lib* "},{"title":"Android : Menampilkan/menyembunyikan keyboard","baseurl":"","url":"/2012/10/android-menampilkan-menyembunyikan-keyboard","date":"2012-10-09 07:28:20 +0700","categories":["staffblogui","java"],"body":"Android menampilkan dan menyembunyikan keyboard. sebelumnya import terlebih dahulu 1 import android.view.inputmethod.InputMethodManager ; 2 3 InputMethodManager imm = ( InputMethodManager ) getSystemService ( Context . INPUT_METHOD_SERVICE ); 4 imm . toggleSoftInput ( InputMethodManager . SHOW_FORCED , 0 ); atau 1 InputMethodManager imm = ( InputMethodManager ) getSystemService ( Context . INPUT_METHOD_SERVICE ); 2 imm . hideSoftInputFromWindow ( editText . getWindowToken (), 0 ); atau jika ingin ingin selalu memunculkan keyboard pada suatu window edit AndroidManifest.xml 1 <activity android:name= \".HomeActivity\" android:label= \"Home\" android:windowSoftInputMode= \"stateAlwaysVisible\" > *Catatan biar ga lupa* :) "},{"title":"Android : Beberapa cara OnClickListener","baseurl":"","url":"/2012/10/android-beberapa-cara-onclicklistener","date":"2012-10-12 04:06:13 +0700","categories":["staffblogui","java"],"body":"Berikut adalah beberapa cara OnClickListener 1 findViewById ( R . id . btnAksi ). setOnClickListener ( new OnClickListener () { 2 @Override 3 public void onClick ( View v ) { 4 // Aksi yang akan dilakukan saat button di klik 5 } 6 }); Ada cara lain jika mempunyai banyak button dan untuk mengurangi code 1 View . OnClickListener handler = View . OnClickListener () { 2 public void onClick ( View v ) { 3 switch ( v . getId ()) { 4 case R . id . btn_aksi1 : 5 //Aksi yang akan dilakukan 6 break ; 7 case R . id . btn_aksi2 : 8 //Aksi yang akan dilakukan 9 break ; 10 } 11 } 12 } 13 findViewById ( R . id . btn_aksi1 ). setOnClickListener ( handler ); 14 findViewById ( R . id . btn_aksi2 ). setOnClickListener ( handler ); Dan ada 1 lagi OnClickListener dengan menambahkan atribut onClick pada xml button tersebut 1 class HomeActivity extends Activity { 2 public void btnClickHandler ( View v ) { 3 //Aksi yang akan dilakukan 4 } 5 } 1 <Button android:onClick= \"btnClickHandler\" > 2 </Button> Fungsi btnClickHandler harus mempunyai 1 argument View dan harus di set public. "},{"title":"Android : Install default Aplikasi Android kita ke SD Card","baseurl":"","url":"/2012/11/android-install-default-aplikasi-android-kita-ke-sd-card","date":"2012-11-13 08:05:40 +0700","categories":["staffblogui","java"],"body":"Saya sedang develop aplikasi Android untuk skripsi sarjana saya, sebelumnya default adalah ke penyimpanan internal namun ada beberapa teman menanyakan untuk bisa install ke penyimpanan external/SD Card. Setelah ditelusuri ternyata fitur ini dapat dilakukan pada Android API Level 8 / Android 2.2 (Froyo) ke atas. Hal ini dapat dilakukan dengan cara memodifikasi file manifest / AndroidManifest.xml Anda dengan menambahkan android:installLocation pada elemen atribut . 1 <manifest xmlns:android= \"http://schemas.android.com/apk/res/android\" 2 android:installLocation= \"preferExternal\" 3 ... > Untuk value \"preferExternal\" maka aplikasi Anda akan diinstal pada penyimpanan external, jika penyimpanan external penuh maka aplikasi akan di instal di penyimpanan internal. 1 <manifest xmlns:android= \"http://schemas.android.com/apk/res/android\" </p > 2 android:installLocation=\"auto\" 3 ... > Untuk value \"auto\" maka aplikasi Anda akan dapat diinstal pada penyimpanan external. Sistem yang akan memutuskan lokasi untuk menginstal aplikasi Anda. Dengan salah satu value tersebut, pengguna nantinya juga dapat memindahkan aplikasi antara dua lokasi. Contoh Aplikasi yang dapat dipindahkan ke SD Card : Contoh Aplikasi yang tidak dapat dipindahkan ke SD Card : Catatan penting!! Ada beberapa feature dari android sehinggga membuat aplikasi tidak boleh/bisa diinstal ke penyimpanan external : - Service - Alarm Service - Input Method Engine - Live Wallpaper - App Widgets - Account Manager - Sync Adapters - Device Administrator - Broadcast Receiver Listening for \"boot completed\" - Copy Protection Jika Aplikasi Anda memakai feature diatas disarankan untuk tidak membuat aplikasi berjalan pada penyimpanan external. Untuk Selengkapnya dapat dibaca pada Guide Developer Android App Install Location . "},{"title":"Install dan Setting Apache 2.2 + PHP 5.3 pada windows","baseurl":"","url":"/2012/11/install-dan-setting-apache-2-2-php-5-3-pada-windows","date":"2012-11-19 10:17:08 +0700","categories":["staffblogui","php"],"body":" Saya adalah penggemar framework Kohana , baru-baru ini Kohana mengeluarkan versi terbarunya yaitu Kohana 3.3 dan membutuhkan PHP 5.3, sedangkan versi PHP yang sedang saya gunakan adalah PHP 5.2. Mau tidak mau saya harus mengganti ke PHP 5.3, dan saya kira akan mudah namun ada beberapa masalah ketika saya akan mengganti ke PHP 5.3 berikut adalah langkah-langkahnya : 1. Saya Asumsikan Anda sudah mendownload dan menginstall Apache 2.2 Tambahkan konfigurasi berikut pada httpd.conf 1 LoadModule php5_module C:/PHP53/php5apache2_2.dll 2 AddType application/x-httpd-php .php .inc 3 PHPIniDir C:/PHP53/ *perhatian C:/PHP53/ adalah direktori dari PHP 5.3 saya 2. Download dan ekstrak PHP 5.3 (yang saya gunakan adalah 5.3.5-Win32-VC6-x86 thread safe) Edit konfigurasi php.ini Anda Tambahkan 1 date.timezone = &quot;Asia/Jakarta\" 2 extension_dir = &quot;C:\\PHP53\\ext\" dan juga jika Anda akan mengaktifkan extension, hilangkan saja tanda ; (titik koma) contoh : 1 ;extension=php_bz2.dll 2 extension=php_curl.dll 3 ;extension=php_fileinfo.dll 4 extension=php_gd2.dll 5 extension=php_http.dll 6 ;php_http.dll dari http://downloads.php.net/pierre/php_http-5.3-svn20091125-vc6-x86.zip 7 ;extension=php_gettext.dll 8 ;extension=php_gmp.dll 9 ;extension=php_intl.dll 10 extension=php_imap.dll 11 ;extension=php_interbase.dll 12 extension=php_ldap.dll 13 extension=php_mbstring.dll 14 ;extension=php_mcrypt.dll 15 ;extension=php_exif.dll ; Must be after mbstring as it depends on it 16 extension=php_mysql.dll 17 ;extension=php_mysqli.dll 18 extension=php_oci8.dll ; Use with Oracle 10gR2 Instant Client 19 ;extension=php_oci8_11g.dll ; Use with Oracle 11gR2 Instant Client 20 extension=php_openssl.dll 21 ;extension=php_pdo_firebird.dll 22 ;extension=php_pdo_mssql.dll 23 extension=php_pdo_mysql.dll 24 ;extension=php_pdo_oci.dll 25 ;extension=php_pdo_odbc.dll 26 extension=php_pdo_pgsql.dll 27 extension=php_pdo_sqlite.dll 28 extension=php_pgsql.dll 29 ;extension=php_pspell.dll 30 ;extension=php_shmop.dll 31 ; The MIBS data available in the PHP distribution must be installed. 32 ; See http://www.php.net/manual/en/snmp.installation.php 33 ;extension=php_snmp.dll 34 extension=php_soap.dll 35 ;extension=php_sockets.dll 36 extension=php_sqlite.dll 37 ;extension=php_sqlite3.dll 38 ;extension=php_sybase_ct.dll 39 ;extension=php_tidy.dll 40 extension=php_xmlrpc.dll 41 extension=php_xsl.dll 42 ;extension=php_zip.dll 43 extension=php_xdebug.dll 44 ;php_xdebug.dll dari http://downloads.php.net/pierre/php_xdebug-2.0.5-5.3-Win32-VC6-x86.zip 45 extension=php_apc.dll 46 ;php_apc.dll dari http://dev.freshsite.pl/nc/php-accelerators/apc/download/apc-316-for-php-53-vc6.html *untuk extension disarankan menggunakan library VC6 Karena saya menggunakan php APC, maka saya menambah konfigurasi 1 apc.shm_size=32M Ada perubahan pada konfigurasi apc.shm.size ditambahkan M untuk MB atau G untuk GB. *jika belum diubah maka akan muncul error PHP Warning: PHP Startup: apc.shm_size now uses M/G suffixes, please update your ini files Lalu start/restart apache server. It's works now i'm using PHP 5.3, can't wait to try Kohana 3.3. Sekian, jika ada pertanyaan silahkan ditunggu komentarnya :) Website yang berguna untuk pengguna PHP windows http://downloads.php.net/pierre/ "},{"title":"Hacking Kohana External Request","baseurl":"","url":"/2013/01/hacking-kohana-external-request","date":"2013-01-11 04:15:24 +0700","categories":["staffblogui","php"],"body":"Iseng-iseng sedang ada kerjaan untuk membaca webservice lewat kohana 3.2 menggunakan Request::factory($url), saat akan mengakses webservice yang menggunakan protocol HTTPS (semisal https://localhost/json.php), ternyata terdapat error berikut error:14090086:SSL routines:SSL3_GET_SERVER_CERTIFICATE:certificate verify failed karena memang tidak menggunakan valid certificate. Setelah dicari ternyata bisa menambahkan options curl nya pada system kohana (but it's not recommended) Untuk dapat mengakses webservice HTTPS yang certificatenya tidak ada/tidak valid pada kohana kita hanya tinggal menambahkan beberapa line pada file system\\classes\\kohana\\request\\client\\curl.php 1 $this -> _options [ CURLOPT_SSL_VERIFYHOST ]      = FALSE ; 2 $this -> _options [ CURLOPT_SSL_VERIFYPEER ]      = FALSE ; Jika Anda ingin menggunakan Request::factory() via proxy dapat menambahkan : 1 $this -> _options [ CURLOPT_PROXY ]              = 'ip_proxy_server' ; 2 $this -> _options [ CURLOPT_PROXYPORT ] = 'port_proxy_server' ; Dan akhirnya bisa mengakses webservice yang menggunakan HTTPS. "},{"title":"Cara mudah install Ruby pada Mac OS X dengan RVM","baseurl":"","url":"/2013/02/cara-mudah-install-ruby-pada-mac-os-x-dengan-rvm","date":"2013-02-07 04:34:37 +0700","categories":["staffblogui"],"body":"Jika Anda seorang developer Ruby ataupun pengguna cloud hosting (OpenShift, CloudFoundry, AppFog) pasti membutuhkan Ruby untuk dapat menggunakan CLI client. RVM menjadi jawaban saya untuk dapat mengupgrade maupun menginstall Ruby versi yang kita mau, berikut langkah-langkahnya : Prequiresites : - XCode (biasanya di bundle pada DVD Mac OS X) - GCC  \\curl -L https://get.rvm.io | bash -s stable --ruby Lalu setelah rvm terinstall, kita dapat melihat versi ruby yang tersedia rvm list known Hasilnya # MRI Rubies [ruby-]1.8.6[-p420] [ruby-]1.8.7[-p371] [ruby-]1.9.1[-p431] [ruby-]1.9.2[-p320] [ruby-]1.9.3-p125 [ruby-]1.9.3-p194 [ruby-]1.9.3-p286 [ruby-]1.9.3-p327 [ruby-]1.9.3-p362 [ruby-]1.9.3[-p374] [ruby-]1.9.3-head [ruby-]2.0.0-rc1 ruby-head # GoRuby goruby # TheCodeShop - MRI experimental patches tcs # jamesgolick - All around gangster jamesgolick # Minimalistic ruby implementation - ISO 30170:2012 mruby[-head] # JRuby jruby-1.2.0 jruby-1.3.1 jruby-1.4.0 jruby-1.6.5.1 jruby-1.6.6 jruby-1.6.7.2 jruby-1.6.8 jruby[-1.7.2] jruby-head # Rubinius rbx-1.0.1 rbx-1.1.1 rbx-1.2.3 rbx-1.2.4 rbx[-head] rbx-2.0.testing rbx-2.0.0-rc1 # Ruby Enterprise Edition ree-1.8.6 ree[-1.8.7][-2012.02] # Kiji kiji # MagLev maglev[-head] maglev-1.0.0 # Mac OS X Snow Leopard Or Newer macruby-0.10 macruby-0.11 macruby[-0.12] macruby-nightly macruby-head # Opal opal # IronRuby ironruby[-1.1.3] ironruby-head Lalu kita akan install (ruby 1.9.3-p374 adalah versi stabil saat tulisan ini di buat) : rvm install ruby-1.9.3-p374 Maka ruby-1.9.3-p374 akan terinstall pada mac Anda. Jika Anda mempunyai lebih dari 1 versi maka dapat mengubah default ruby yang akan digunakan rvm use ruby-1.9.3-p374 Saya menggunakan Mac Os X (10.6.8) Snow Leopard (Still love this Os X version) Beberapa cara lain pun dapat dilihat pada https://rvm.io/rvm/install/ **Trouble Shooting yang pernah saya alami saat akan upgrade dari Ruby 1.8.7 ke Ruby 1.9.3 terdapat error, coba jalankan : sudo rm /usr/local/lib/libz.* rvm reinstall ruby-1.9.3-p374 *Untuk mengimport gemset manual untuk ruby-1.9.3-p374* rvm system ; rvm gemset export system.gems ; rvm ruby-1.9.3-p374 ; rvm gemset import system Sekian :) Thanks to : http://stackoverflow.com/questions/3696564/how-to-update-ruby-to-1-9-x-on-mac http://stackoverflow.com/questions/5426892/trouble-installing-ruby-1-9-2-with-rvm-mac-os-x https://rvm.io/rvm/install/ "},{"title":"Pentingnya Database Connection Pooling","baseurl":"","url":"/2013/02/pentingnya-database-connection-pooling","date":"2013-02-19 08:02:28 +0700","categories":["database"],"body":"Beberapa saat lalu saya memikirkan betapa pentingnya resource pada server database, dulu sewaktu saya duduk dibangku kuliah pada saat mengerjakan project/tugas belum terlalu memikirkan hal tersebut.  Jika aplikasi kita tergantung pada database otomatis kita harus selalu terkoneksi ke database, entah untuk query select, insert, update atau delete. Connection Pooling adalah suatu metode untuk menjaga supaya koneksi database terbuka sehingga dapat digunakan kembali, karena membuka koneksi ke database adalah proses yang \"Mahal\", jadi pooling menjaga koneksi tetap aktif. Keuntungan Connection Pooling : - Mempercepat response time (pada saat membuka koneksi) - Penggunaan kembali resource database - Penggunaan memory lebih hemat Connection Pooling biasanya populer di kalangan pengguna Java (Application Server), banyak library yang tersedia untuk dapat menggunakan fitur ini, contohnya : - Commons Database Connection Pooling (Commons DBCP) - C3P0 - JDBC3 Connection and Statement Pooling - BoneCP Saya sangat tertatik dengan BoneCP, dikarenakan pada website http://jolbox.com/dynamic-benchmark.html disertakan benchmark dengan beberapa Database Connection Pooling seperti diatas, dan hasilnya WOW. Jika sempat saya akan membuat aplikasi kecil menggunakan PlayFramework! dengan Database Connection Pooling menggunakan library diatas. Saya adalah seorang penggemar programming PHP, namun sayang sekali PHP tidak mendukung untuk Pooling Connection, PHP hanya mendukung Persistent Connection. Persistent Connection != Connection Pooling. Saat saya sedang mencari, ternyata Oracle mendukung Pooling untuk PHP dengan nama Database Resident Connection Pooling . Di website tersebut ditulis : DRCP complements middle-tier connection pools that share connections between threads in a middle-tier process. In addition, DRCP enables sharing of database connections across middle-tier processes on the same middle-tier host and even across middle-tier hosts. This results in significant reduction in key database resources needed to support a large number of client connections, thereby reducing the database tier memory footprint and boosting the scalability of both middle-tier and database tiers. Having a pool of readily available servers also has the additional benefit of reducing the cost of creating and tearing down client connections. DRCP is especially relevant for architectures with multi-process single threaded application servers (such as PHP/Apache) that cannot perform middle-tier connection pooling. The database can still scale to tens of thousands of simultaneous connections with DRCP. Yup DRCP memberikan solusi Pooling bagi PHPers :D Berikut sedikit perbandingan jika menggunakan DRCP dibanding dengan Dedicated Server dan Shared server dari situs tersebut : Dedicated Server Memory used = 5000 X (400 KB + 4 MB) = 22 GB Shared Server Memory used = 5000 X 400 KB + 100 X 4 MB = 2.5 GB Out of the 2.5 GB, 2 GB is allocated from the SGA. Database Resident Connection Pooling Memory used = 100 X (400 KB + 4 MB) + (5000 X 35KB)= 615 MB Sungguh Sangat jauh bukan?ya itu merupakan sedikit dari salah satu Keuntungan Database Connection Pooling. CMIIW :) Bacaan : http://stackoverflow.com/questions/4041114/what-is-database-pooling http://docs.oracle.com/cd/E17781_01/appdev.112/e18555/ch_two.htm#BABHHEDD http://docs.oracle.com/cd/B28359_01/server.111/b28310/manproc002.htm http://pic.dhe.ibm.com/infocenter/wasinfo/v6r0/index.jsp?topic=%2Fcom.ibm.websphere.base.doc%2Finfo%2Faes%2Fae%2Fcdat_conpool.html "},{"title":"Iseng-iseng : Script PHP untuk menghitung umur","baseurl":"","url":"/2013/04/iseng-iseng-script-php-untuk-menghitung-umur","date":"2013-04-05 04:40:49 +0700","categories":["staffblogui","php"],"body":"Iseng-iseng lagi memikirkan cara menghitung umur seseorang hasil dari mysql datetime, gampang-gampang susah. Nemu dari om gugel cara yang simple (tapi kurang tepat) $tgl = date('Y-m-d', strtotime($tgl_lahir)); $umur = floor(time() - strtotime($tgl))/(60*60*24*365); echo $umur; Mengurangi unix time sekarang dengan unix time dari $tgl_lahir (format dari mysql datetime 'Y-m-d H:i:s'), kurang tepat karena membagi selisih unix time dengan asumsi pertahun ada 365 hari, sedangkan dalam setahun terkadang 366 hari. Cara yang lebih tepat : Masih dari om gugel $date1 = new DateTime(date('Y-m-d', strtotime($tgl_lahir))); $date2 = new DateTime(date('Y-m-d')); $interval = $date1->diff($date2); echo \"difference \" . $interval->y . \" years, \" . $interval->m.\" months, \".$interval->d.\" days \"; namun fungsi dari php DateTime::diff hanya dapat berjalan pada PHP 5 >= 5.3.0 Lalu saya membuat yang dapat berjalan untuk PHP 4 ke atas list($thn_skrg, $bln_skrg, $tgl_skrg) = explode('-', date('Y-m-d')); list($thn_lhr, $bln_lhr, $tgl_lhr) = explode('-', date('Y-m-d', strtotime($tgl_lahir))); $umur = $thn_skrg - $thn_lhr; if($bln_skrg < $bln_lhr) $umur--; else if(($bln_skrg == $bln_lhr) && ($tgl_skrg < $tgl_lhr)) $umur--; echo $umur; Meskipun agak panjang, namun hasil pemikiran sendiri. :D Bacaan : http://stackoverflow.com/questions/676824/how-to-calculate-the-difference-between-two-dates-using-php "},{"title":"Selamat tinggal Powerpoint...","baseurl":"","url":"/2013/05/selamat-tinggal-powerpoint","date":"2013-05-07 07:16:21 +0700","categories":["staffblogui"],"body":" Sudah Bertahun-tahun orang-orang (termasuk saya) menggunakan Powerpoint sebagai software untuk membuat presentasi baik untuk urusan pendidikan, bisnis, dan lainnya. Mungkin bagi sebagian orang tidak masalah menggunakan Powerpoint jika mempunyai lisensi microsoft office (kebetulan kampus saya mengadakan kerja sama dengan microsoft), bagaimana jika tidak mempunyai lisensi?mungkin dapat menggunakan software gratisan Libre Office ataupun Open Office. Namun seiring jalannya waktu kita membutuhkan kemudahan, bukan hanya dalam membuat tapi dalam mempersiapkan. Semisal jika ingin menggunakan Libre Office / Open Office harus diinstal terlebih dahulu dan lumayan memakan ruang harddisk. Seiring dengan perkembangan jaman dan teknologi web (HTML 5, CSS 3) yang semakin maju setiap orang pasti mempunyai minimal 1 browser (yang saya maksud bukan IE :?:) semisal Firefox, chrome, netscape dll. Sekarang presentasi pun dapat dilakukan lewat browser, kok bisa?ya bisa, minimal hanya dengan mengetahui sedikit syntax HTML Anda pun dapat membuat presentasi via browser. Framework yang dapat dipakai adalah reveal.js dan apabila ingin presentasi yang unik seperti Prezi dapat menggunakan impress.js . Penggunaannya cukup mudah cukup download ( reveal.js ), extract dan ubah file index.html sesuai yang Anda inginkan. Fitur reveal.js : - Selain menggunakan HTML dapat menggunakan Markdown Syntax . - Transition Styles yang disediakan Cube, Page, Concave, Zoom, Linear, Fade, None, Default. - Slide dapat di ekspor ke PDF. - Themes ada 6 yang disediakan default, beige, sky, night, serif, simple atau dapat membuat sendiri. - Fragment Styles Sebelum mencoba dapat melihat contoh-contoh presentasi dari reveal.js di https://github.com/hakimel/reveal.js/wiki/Example-Presentations Selamat mencoba :) "},{"title":"Install Apache Maven pada Windows","baseurl":"","url":"/2013/05/install-apache-maven-pada-windows","date":"2013-05-23 08:43:40 +0700","categories":["staffblogui","java"],"body":"Maven adalah sebuah build automation tool untuk java (selengkapnya http://en.wikipedia.org/wiki/Apache_Maven ). Sebuah project membutuhkan maven jika terdapat sebuah file xml, untuk maven 1 biasanya bernama project.xml sedangkan untuk maven 2 bernama pom.xml berisi informasi sebuah projek dan detil konfigurasi maven. Project Object Model adalah sebuah unit fundamental kerja di maven. Berikut cara untuk menginstall di windows : 1. Prequirement : - JDK (yang di pakai JDK jdk1.6.0_41, dapat mendownload di http://www.oracle.com/technetwork/java/javase/downloads/index.html ) 2. Download Apache Maven di http://maven.apache.org/download.cgi (penulis mendownload Maven 3.0.5 (Binary zip)) dan ekstrak apache-maven-3.0.5-bin.zip ke C:\\maven, sehingga directory apache maven menjadi C:\\maven\\apache-maven-3.0.5 4. Tambahkan environment variable (Saya tambahkan ke User Variables) yaitu : JAVA_HOME (direktori JDK Anda), M2_HOME (direktori apache maven), dan Path. JAVA_HOME = C:\\Program Files\\Java\\jdk1.6.0_41 M2_HOME = C:\\maven\\apache-maven-3.0.5 Path = %JAVA_HOME%\\bin;%M2_HOME%\\bin 4. Jalankan mvn --version Yak maven sudah terinstal :) "},{"title":"Membuat Grafik menggunakan HTML (SVG)","baseurl":"","url":"/2013/07/membuat-grafik-menggunakan-html-svg","date":"2013-07-17 04:45:41 +0700","categories":["staffblogui"],"body":"Beberapa waktu lalu iseng-iseng ingin membuat grafik untuk keperluan kerjaan, sempat mikir buat pakai fusionchart (grafik berbasis flash berlisensi alias bayar). Waktu tugas kuliah pernah pake fusionchart, lumayan mudah menggunakannya tapi gw hindarin sesuatu yang berbasis flash (except youtube, mdh2an nanti ga berbasis flash :D) karna flash ternyata kurang bagus dan banyak makan resource CPU ampe bikin PC hang *curhat* gmn klo smartphone, bisa meledak *lebay dan kebetulan library d3js gratis seperti library reveal.js yang saya gunakan untuk mengganti powerpoint . Seperti biasa siapa lagi yang ditanya klo bukan ke mbah gugel. Sempat nyoba beberapa seperti Chart.Js bagus sih tapi terlalu simpel kurang interaktif dan kurang greget gitu,hehe.. Akhirnya ketemu sama 1 library javascript yaitu D3.js menurut keterangan websitenya : D3.js is a JavaScript library for manipulating documents based on data. D3 helps you bring data to life using HTML, SVG and CSS. D3’s emphasis on web standards gives you the full capabilities of modern browsers without tying yourself to a proprietary framework, combining powerful visualization components and a data-driven approach to DOM manipulation. Yes this is what i want! Terlebih saat melihat contoh-contoh grafiknya , banyak sekali, menantang dan cukup gereget lihatnya. Sehingga pilihan hati gw jatuh kepada d3.js :D, tapi cinta tetep buat si pacar *lho*. D3.js menggunakan syntax SVG dalam HTML dan mendukung banyak browser desktop bahkan mobile, berikut link tabel-tabel terhadap dukungan SVG pada HTML . Pertama nyoba sih agak susah, tapi dari contoh-contohnya cukup mudah kebetulan saya hanya menggunakan Basic Chart saja. Line Chart menggunakan data dari format JSON : 1 <meta charset= \"utf-8\" > 2 <style> 3 4 body { 5 6 font : 10px sans-serif ; 7 8 } 9 10 .axis path , 11 12 .axis line { 13 14 fill : none ; 15 16 stroke : #000 ; 17 18 shape - rendering : crispEdges ; 19 20 } 21 22 .x.axis path { 23 24 display : none ; 25 26 } 27 28 .line { 29 30 fill : none ; 31 32 stroke : steelblue ; 33 34 stroke - width : 1.5px ; 35 36 } 37 38 </style> 39 40 <body> 41 42 <script src= \"d3.js\" ></script> 43 44 <script> 45 46 var margin = { top : 20 , right : 20 , bottom : 30 , left : 50 }, 47 48 width = 960 - margin . left - margin . right , 49 50 height = 500 - margin . top - margin . bottom ; 51 52 var parseDate = d3 . time . format ( \"%d-%b-%y\" ). parse ; 53 54 var x = d3 . time . scale () 55 56 . range ([ 0 , width ]); 57 58 var y = d3 . scale . linear () 59 60 . range ([ height , 0 ]); 61 62 var xAxis = d3 . svg . axis () 63 64 . scale ( x ) 65 66 . orient ( \"bottom\" ); 67 68 var yAxis = d3 . svg . axis () 69 70 . scale ( y ) 71 72 . orient ( \"left\" ); 73 74 var line = d3 . svg . line () 75 76 . x ( function ( d ) { return x ( d . date ); }) 77 78 . y ( function ( d ) { return y ( d . close ); }); 79 80 var svg = d3 . select ( \"body\" ). append ( \"svg\" ) 81 82 . attr ( \"width\" , width + margin . left + margin . right ) 83 84 . attr ( \"height\" , height + margin . top + margin . bottom ) 85 86 . append ( \"g\" ) 87 88 . attr ( \"transform\" , \"translate(\" + margin . left + \",\" + margin . top + \")\" ); 89 90 d3 . json ( \"data.json\" , function ( error , data ) { 91 92 data . forEach ( function ( d ) { 93 94 d . date = parseDate ( d . date ); 95 96 d . close = + d . close ; 97 98 }); 99 100 x . domain ( d3 . extent ( data , function ( d ) { return d . date ; })); 101 102 y . domain ( d3 . extent ( data , function ( d ) { return d . close ; })); 103 104 svg . append ( \"g\" ) 105 106 . attr ( \"class\" , \"x axis\" ) 107 108 . attr ( \"transform\" , \"translate(0,\" + height + \")\" ) 109 110 . call ( xAxis ); 111 112 svg . append ( \"g\" ) 113 114 . attr ( \"class\" , \"y axis\" ) 115 116 . call ( yAxis ) 117 118 . append ( \"text\" ) 119 120 . attr ( \"transform\" , \"rotate(-90)\" ) 121 122 . attr ( \"y\" , 6 ) 123 124 . attr ( \"dy\" , \".71em\" ) 125 126 . style ( \"text-anchor\" , \"end\" ) 127 128 . text ( \"Price ($)\" ); 129 130 svg . append ( \"path\" ) 131 132 . datum ( data ) 133 134 . attr ( \"class\" , \"line\" ) 135 136 . att < /pre>line); 137 138 }); 139 </script> data.json Hasilnya beberapa troubleshooting yg pernah saya dapatkan adalah pada format date, php menghasilkan timestamp sedangkan d3.js menggunakan unix epoch (unix epoch = timestamp * 1000). Dilain kesempatan grafik akan dibuat lebih interaktif. See ya.. "},{"title":"Aplikasi RESTful (GIS Service) menggunakan Slim Framework","baseurl":"","url":"/2013/08/aplikasi-restful-gis-service-menggunakan-slim-framework","date":"2013-08-29 07:42:05 +0700","categories":["staffblogui","php"],"body":" Beberapa waktu lalu seorang teman (Edwin) membuatkan webservice (SOAP) dengan menggunakan java (http://210.247.242.106/GISService/Service?wsdl) tentang database provinsi, kecamatan dan desa di Indonesia yang didapatkan dari Panji09 pada thread di kaskus . Kali ini saya mencoba untuk membuat webservice (REST) sederhana dengan menggunakan Slim Framework. Apa itu REST? REST adalah Representational State Transfer . - REST menggunakan protokol HTTP (Create, Read, Update, Delete) dengan metode POST, GET, PUT, DELETE. - REST alternatif dari RPC atau webservice SOAP, WSDL dll. - REST sebenarnya bukanlah sebuah standar, hanya sebuah Architectural style bukan seperti SOAP menggunakan protokol. Kenapa Slim Framework? - Karena mirip dengan Sinatra (Ruby). - Slim menggunakan PHP >= 5.3.0. - Ukurannya relatif kecil. - Mudah dipelajari. Fitur Powerful router Standard and custom HTTP methods Route parameters with wildcards and conditions Route redirect, halt, and pass Route middleware Template rendering with custom views Flash messages Secure cookies with AES-256 encryption HTTP caching Logging with custom log writers Error handling and debugging Middleware and hook architecture Simple configuration Contoh penggunaan slim dengan koneksi ke database lewat PDO : 1 <? php 2 3 require 'Slim/Slim.php' ; 4 5 require 'db.php' ; 6 7 \\Slim\\Slim :: registerAutoloader (); 8 9 $app = new \\Slim\\Slim ( array ( 10 11 'mode' => 'production' , 12 13 'log.writer' => new \\Slim\\Extras\\Log\\DateTimeFileWriter ( array ( 14 15 'path' => './logs' , 16 17 'name_format' => 'Y-m-d' , 18 19 'message_format' => '%label% - %date% - %message%' 20 21 )) 22 23 )); 24 25 $app -> contentType ( \"application/json\" ); 26 27 $app -> get ( '/getProvinsis' , 'getProvinsis' ); 28 29 $app -> get ( '/getKabupatens/:id' , 'getKabupatens' ); 30 31 $app -> get ( '/getKecamatans/:id' , 'getKecamatans' ); 32 33 $app -> get ( '/getDesas/:id' , 'getDesas' ); 34 35 // Only invoked if mode is \"production\" 36 37 $app -> configureMode ( 'production' , function () use ( $app ) { 38 39 $app -> config ( array ( 40 41 'log.enable' => true , 42 43 'log.level' => \\Slim\\Log :: WARN , 44 45 'debug' => false 46 47 )); 48 49 }); 50 51 // Only invoked if mode is \"development\" 52 53 $app -> configureMode ( 'development' , function () use ( $app ) { 54 55 $app -> config ( array ( 56 57 'log.enable' => false , 58 59 'log.level' => \\Slim\\Log :: DEBUG , 60 61 'debug' => true 62 63 )); 64 65 }); 66 67 $app -> notFound ( function () use ( $app ) { 68 69 echo 'notFound coy' ; 70 71 }); 72 73 $app -> run (); 74 75 //All Functions goes here 76 77 function getProvinsis () 78 79 { 80 81 global $app ; 82 83 $sql = \"select * FROM provinsi ORDER BY id\" ; 84 85 try { 86 87 $app -> etag ( 'getProvinsis' ); 88 89 $db = getConnection (); 90 91 $stmt = $db -> query ( $sql ); 92 93 $provinsis = $stmt -> fetchAll ( PDO :: FETCH_OBJ ); 94 95 $db = null ; 96 97 echo json_encode ( $provinsis ); 98 99 } catch ( \\PDOException $e ) { 100 101 echo '{\"error\":{\"text\":' . $e -> getMessage () . '}}' ; 102 103 } 104 105 } 106 107 function getKabupatens ( $id ) 108 109 { 110 111 $sql = \"SELECT * FROM kabupaten WHERE id_prov = :id\" ; 112 113 try { 114 115 $db = getConnection (); 116 117 $stmt = $db -> prepare ( $sql ); 118 119 $stmt -> bindParam ( \"id\" , $id ); 120 121 $stmt -> execute (); 122 123 $kabupatens = $stmt -> fetchAll (); 124 125 $db = null ; 126 127 echo json_encode ( $kabupatens ); 128 129 } catch ( \\PDOException $e ) { 130 131 echo '{\"error\":{\"text\":' . $e -> getMessage () . '}}' ; 132 133 } 134 135 } 136 137 function getKecamatans ( $id ) 138 139 { 140 141 $sql = \"SELECT * FROM kecamatan WHERE id_kabupaten = :id\" ; 142 143 try { 144 145 $db = getConnection (); 146 147 $stmt = $db -> prepare ( $sql ); 148 149 $stmt -> bindParam ( \"id\" , $id ); 150 151 $stmt -> execute (); 152 153 $kecamatans = $stmt -> fetchAll (); 154 155 $db = null ; 156 157 echo json_encode ( $kecamatans ); 158 159 } catch ( \\PDOException $e ) { 160 161 echo '{\"error\":{\"text\":' . $e -> getMessage () . '}}' ; 162 163 } 164 165 } 166 167 function getDesas ( $id ) 168 { 169 170 $sql = \"SELECT * FROM desa WHERE id_kecamatan = :id\" ; 171 172 try { 173 174 $db = getConnection (); 175 176 $stmt = $db -> prepare ( $sql ); 177 178 $stmt -> bindParam ( \"id\" , $id ); 179 180 $stmt -> execute (); 181 182 $desas = $stmt -> fetchAll (); 183 184 $db = null ; 185 186 echo json_encode ( $desas ); 187 } catch ( \\PDOException $e ) { 188 echo '{\"error\":{\"text\":' . $e -> getMessage () . '}}' ; 189 } 190 } Download Anda dapat mendownload source code di https://github.com/jefrip/GISService Referensi : - https://github.com/edwinkun/GISService - http://coenraets.org/blog/2011/12/restful-services-with-jquery-php-and-the-slim-framework/ "},{"title":"Weka Tutorial - Perkenalan, Membaca dan Membuat ARFF","baseurl":"","url":"/2013/10/weka-tutorial-perkenalan-membaca-dan-membuat-arff","date":"2013-10-22 03:11:18 +0700","categories":["java","programming"],"body":" Akhir-akhir ini saya sedang bermain-main dengan Weka, baik versi GUI ataupun library untuk menggunakan fungsi-fungsi Weka (Instances, Filter, Classification, Clustering, dll). Supaya tidak lupa saya akan menuliskan satu persatu penggunaan library Weka ( weka-3.7.3.jar ) yang sudah pernah saya lakukan. Weka dalam penggunaannya menggunakan file ARFF (Attribute-Relation File Format) adalah file yang digunakan Weka yang berisi 1 atau lebih instances dari atribut. Dalam file ARFF biasanya terdapat @RELATION namarelasi untuk menamakan relasi sebuah file ARFF, @ATTRIBUTE untuk penamaan setiap atribut baik numeric, nominal, string dan date. sedangkan @DATA pada setiap line untuk merepresentasikan sebuah instances. (Penjelasan lengkapnya ada disini ). Langkah pertama yang terpenting dalam Weka adalah membaca file ARFF / membuat instances sebelum akan diproses klasifikasi, kluster atau hal lainnya. Membaca File ARFF 1 import weka.core.Instances ; 2 import java.io.BufferedReader ; 3 import java.io.FileReader ; 4 5 // Membaca file iris.arff menggunakan BufferedReader 6 BufferedReader reader = new BufferedReader ( new FileReader ( \"/data/iris.arff\" )); 7 8 // Membuat Instances dengan data dari file iris.arff 9 Instances data = new Instances ( reader ); 10 reader . close (); 11 12 // Set Class Index untuk memberitahu kelas dari target, yang akan digunakan klasifikasi. kelas target berada pada atribut terakhir. 13 data . setClassIndex ( data . numAttributes () - 1 ); File iris.arff dapat ditemukan pada folder Weka\\data. Membuat Instances format ARFF Sedangkan untuk membuat sebuah instances berikut contoh untuk dataset iris : 1 public void makeInstance () { 2 // Membuat Attribute List 3 ArrayList < Attribute > attributeList = new ArrayList < Attribute >( 5 ); 4 5 // Membuat 4 Attribute 6 Attribute sepallength = new Attribute ( \"sepallength\" ); 7 Attribute sepalwidth = new Attribute ( \"sepalwidth\" ); 8 Attribute petallength = new Attribute ( \"petallength\" ); 9 Attribute petalwidth = new Attribute ( \"petalwidth\" ); 10 11 // Membuat attribute kelas target 12 ArrayList < String > classVal = new ArrayList < String >( 2 ); 13 classVal . add ( \"Iris-setosa\" ); 14 classVal . add ( \"Iris-versicolor\" ); 15 classVal . add ( \"Iris-virginica\" ); 16 17 // Memasukkan Attribute ke Attribute List 18 attributeList . add ( sepallength ); 19 attributeList . add ( sepalwidth ); 20 attributeList . add ( petallength ); 21 attributeList . add ( petalwidth ); 22 attributeList . add ( new Attribute ( \"class\" , classVal )); 23 24 // Instances baru dengan nama relasi \"iris\" dengan atributList dan index 0 25 Instances instances = new Instances ( \"iris\" , attributeList , 0 ); 26 27 // Set Class Index untuk memberitahu kelas dari target, yang akan digunakan klasifikasi. kelas target berada pada atribut terakhir. 28 instances . setClassIndex ( instances . numAttributes () - 1 ); 29 30 // Membuat dan tambah kan Attribute ke instance 31 Instance inst_co = new DenseInstance ( instances . numAttributes ()); 32 33 // Men set nilai dari Attribute: 34 inst_co . setValue ( sepallength , 6.9 ); 35 inst_co . setValue ( sepalwidth , 3.1 ); 36 inst_co . setValue ( petallength , 5.1 ); 37 inst_co . setValue ( petalwidth , 2.3 ); 38 39 //menambahkan instances dari instance inst_co 40 instances . add ( inst_co ); 41 42 System . out . println ( \"===== Instance dataset =====\" ); 43 System . out . println ( instances ); 44 } Hasil dari instances yang dibuat manual : 1 @relation iris 2 @attribute sepallength numeric 3 @attribute sepalwidth numeric 4 @attribute petallength numeric 5 @attribute petalwidth numeric 6 @attribute class {Iris-setosa,Iris-versicolor,Iris-virginica} 7 8 @data 9 10 6.9,3.1,5.1,2.3,? Menyimpan instance ke file arff Anda dapat menyimpan instances yang sudah di buat ke file arff dengan menggunakan fungsi BufferedWriter di java. 1 BufferedWriter writer = new BufferedWriter ( new FileWriter ( \"data/iris_create.arff\" )); 2 writer . write ( instances . toString ()); 3 writer . flush (); 4 writer . close (); Sekarang cukup mudah bukan membuat sebuah instances baru melalui java. thx weka wikispaces :D Berikut file source code dan library sudah saya upload ke github . References : - http://weka.wikispaces.com/ARFF+%28stable+version%29 - http://weka.wikispaces.com/Use+WEKA+in+your+Java+code#Instances-ARFF%20File - http://weka.wikispaces.com/Programmatic+Use - http://weka.wikispaces.com/Save+Instances+to+an+ARFF+File "},{"title":"Kohana Framework 3.x : Error zlib output compression","baseurl":"","url":"/2013/12/kohana-framework-3-x-error-zlib-output-compression","date":"2013-12-09 03:31:15 +0700","categories":["staffblogui","php"],"body":"PROBLEM Error message \"ob_end_flush() [ ref.outcontrol ]: failed to delete buffer zlib output compression\" Error terjadi pada saat saya menggunakan fungsi $response->send_file() , header file berubah alhasil file menjadi korup. Saya cek php.ini zlib.output_compression = On Sudah mencoba yang disarankan http://code.iviable.com/2011/11/09/zlib-output_compression-with-ini_set-doesnt-work-as-expected/ tetapi tetap tidak dapat jalan. SOLUSI File system\\classes\\Kohana\\Response.php dapat di patch pada line 506 - 510 1 while ( ob_get_level ()) 2 { 3 // Flush all output buffers 4 ob_end_flush (); 5 } Diganti dengan patch dari https://github.com/bcosca/fatfree/issues/262#issuecomment-13414180 1 if ( ! count ( array_diff ( ob_list_handlers (), array ( 'default output handler' )))) 2 ob_clean (); Atau jika tidak menggunakan kompresi dapat diubah php.ini menjadi zlib.output_compression = Off "},{"title":"Mengakali instal aplikasi yang membutuhkan iOS 7.0 agar kompatibel dengan iOS 6 kebawah","baseurl":"","url":"/2013/12/mengakali-instal-aplikasi-yang-membutuhkan-ios-7-0-agar-kompatibel-dengan-ios-6-kebawah","date":"2013-12-09 07:40:44 +0700","categories":["staffblogui"],"body":"Seperti judulnya saya sempat stuck karena tidak bisa menginstal aplikasi yang saya inginkan, dikarenakan membutuhkan minimal iOS 7.0. Saya adalah penggemar produk Apple namun karena keterbatasan dana jadi hanya mempunyai produk yang low end(jadul), smartphone yang saya punya adalah iPhone 3GS yang mana maksimal hanya sampai iOS 6.1.3 (sudah lumayan lemot). Cara Mengakali instal aplikasi yang membutuhkan iOS 7.0 agar kompatibel dengan iOS 6 kebawah adalah : 1. Unduh aplikasi yang Anda inginkan yang minimal iOS 7.0 menggunakan iTunes dengan login Anda melalui PC (ingat PC) 2. Setelah selesai mengunduh di iTunes PC Anda, buka Appstore di iPhone Anda dan cari Aplikasi yang ingin Anda unduh tersebut (nanti akan ada tanda bahwa anda pernah mengunduhnya). Lalu klik tanda download tersebut akan ada konfirmasi kurang lebih seperti berikut : \"Download an older version of this app?\" The current version requires iOS 7.0 or later, but you can download the last compatible version. 3. Pada box konfirmasi Klik Download dan taraaa... Aplikasi akan diunduh dan diinstall. NB : saya belum ketemu aplikasi yang mempunyai masalah dengan iOS 6 kebawah, mungkin saja gagal jika aplikasi hanya di khususkan iOS 7.0 keatas saja. Semoga Bermanfaat. "},{"title":"Error MySQL : mysql_connect(): Headers and client library minor version mismatch","baseurl":"","url":"/2014/04/error-mysql-mysql_connect-headers-and-client-library-minor-version-mismatch","date":"2014-04-10 05:59:32 +0700","categories":["staffblogui"],"body":"Beberapa waktu lalu sedang ramai-ramainya bug OpenSSL CVE-2014-0160 aka HeartBleed yang ditulis oleh rekan saya JP ( https://staff.blog.ui.ac.id/jp/2014/04/10/galat-heartbleed-pada-openssl/ ), Sehingga mengharuskan upgrade pada sisi server. Namun diwaktu itu juga mysql pada sistem pun ikut terupgrade ke versi MySQL 5.6.17-1~dotdeb.1 yang menyebabkan error : mysql_connect(): Headers and client library minor version mismatch . Permasalahan : Ternyata setelah ditelusuri error ini terjadi dikarenakan PHP yang sudah terkompilasi dengan sistem terhubung dengan MySQL versi lama sebelum ditingkatkan ke versi yang lebih baru. Cara Mengatasi Cara mudah untuk mengatasi error ini adalah dengan install php5-mysqlnd : sudo apt-get install php5-mysqlnd Terima kasih untuk bapak Tonny . Referensi : - http://stackoverflow.com/questions/10759334/headers-and-client-library-minor-version-mismatch - http://www.dotdeb.org/2014/04/04/about-the-mysql_connect-headers-and-client-library-minor-version-mismatch-warning-2/ "},{"title":"Instalasi Composer lewat Phar (PHP archive)","baseurl":"","url":"/2014/05/instalasi-composer-lewat-phar-php-archive","date":"2014-05-12 09:51:10 +0700","categories":["staffblogui","php"],"body":"Pendahuluan Untuk beberapa alasan saya membutuhkan Composer untuk menginstall paket PHP dibanding PEAR . Composer mempunyai repository yaitu packagist , Packagist di ibaratkan mirip Maven pada Java hanya saja Packagist khusus PHP dan menyediakan banyak paket PHP yang sangat lengkap. Saat tulisan ini ditulis terdapat sekitar 29.662 Paket https://packagist.org/statistics . Instalasi Kebutuhan sistem : - Composer membutuhkan PHP >= 5.3.2. Unduh Composer https://getcomposer.org/download/ Pada Linux : curl -sS https://getcomposer.org/installer | php Akan menghasilkan composer.phar, Anda dapat menjalankan dengan perintah php composer.phar Atau bila ingin menjadi shortcut mv composer.phar /usr/local/bin/composer sehingga tinggal menjalankan composer Untuk pengguna Windows hanya tinggal mengunduh dan instal file Composer-Setup.exe Tulisan berikutnya akan menginstall paket PHP lewat Composer. See ya "},{"title":"My Yii Environment","baseurl":"","url":"/2014/09/my-yii-environment","date":"2014-09-29 09:27:34 +0700","categories":["staffblogui","php"],"body":"Saya baru dalam hal mengembangkan aplikasi web dengan Yii Framework, tetapi sudah menemukan tools dasar untuk pengembangan aplikasi web. Berikut tools yang saya gunakan, diantaranya : Yii 1.1 Yii PHP Framework ( yii-1.1.15.022a51 ) - Versi terakhir dari Yii Framework 1.1 Yii Booster 4.0.1 (Menggunakan Twitter Bootstrap 3.1.1 dan min butuh PHP 5.4) atau versi lama Yii Booster 3.1.1 (Menggunakan Twitter Bootstrap 2.3.2 kompatibel dengan PHP 5.3) - Untuk keperluan template, Form, dan (the awesome) Gii versi bootstrap. (btw saya fans Twitter Bootstrap :D) Yii-User - Untuk keperluan manajemen user/login Rights - Untuk manajemen role atau hak akses terhadap suatu controller atau action. Yii 2 *akan diupdate kalau sudah mencoba,hehe.. UPDATE - Yii Framework 2.0 dapat di install melalui 2 cara yakni : -- Install dari Composer ( Yii 2.0 ) -- Install dari download github ( Yii 2.0.2 Basic App , Yii 2.0.2 Advanced App ) Next post cara mudah menggunakan tools diatas.. Sekian. "},{"title":"Yii 2.0 + Jasig phpCAS","baseurl":"","url":"/2015/02/yii-2-0-jasig-phpcas","date":"2015-02-03 10:18:36 +0700","categories":["staffblogui","php"],"body":"Setelah di posting sebelumnya tentang Yii Environtment , di kantor saya yakni PPSI yang baru berubah menjadi DSTI sudah menggunakan Single Sign On melalui phpCAS. Beberapa aplikasi baru diharapkan menggunakan SSO untuk login akun JUITA (akun UI). Yii 2.0 adalah framework yang saya pilih untuk SSO menggunakan library phpCAS, caranya pun cukup mudah. 1. Pastikan Anda mempunyai Composer ( cara instalasi Composer ) dan sudah menginstalasi Yii 2.0 Framework (baik basic ataupun advanced, disini saya mengunduh aplikasi Yii 2.0 basic app ). 2. Jangan lupa lakukan perintah composer php composer.phar global require \"fxp/composer-asset-plugin:1.0.0-beta4\" . 3. Tambahkan library phpCAS pada file composer.json seperti berikut (punya saya) : 1 \"require\" : { 2 \"php\" : \">=5.4.0\" , 3 \"yiisoft/yii2\" : \"*\" , 4 \"yiisoft/yii2-bootstrap\" : \"*\" , 5 \"yiisoft/yii2-swiftmailer\" : \"*\" , 6 \"jasig/phpcas\" : \"1.3.3\" 7 } , lalu lakukan composer update 4. Sekarang tinggal setting casHost , casPort dan casContext dari CAS server, pada config/params.php tambahkan (contoh) : 1 <? php 2 3 return [ 4 'casHost' => 'sso.ui.ac.id' , 5 'casPort' => 443 , 6 'casContext' => 'cas' , 7 ]; * nb : Dibutuhkan hak akses aplikasi ke cas server dibutuhkan agar dapat mengakses CAS server. 5. Contoh controller/action untuk login ke CAS server Snippet SiteController 1 // Enable debugging 2 \\phpCAS :: setDebug (); 3 // Initialize phpCAS 4 \\phpCAS :: client ( CAS_VERSION_2_0 , \\Yii :: $app -> params [ 'casHost' ], \\Yii :: $app -> params [ 'casPort' ], \\Yii :: $app -> params [ 'casContext' ]); 5 \\phpCAS :: setNoCasServerValidation (); 6 \\phpCAS :: forceAuthentication (); 7 8 echo \\phpCAS :: getUser (); Anda akan diminta login SSO, setelah login maka akan muncul username Anda. Sekian. "}]}